{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/TrelloConstants.js","webpack:///./src/storage/BoardStorage.js","webpack:///./src/Debug.js","webpack:///./src/storage/CardStorage.js","webpack:///./src/LeanCoffeeSettings.js","webpack:///./src/storage/Storage.js","webpack:///./src/settings.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","124e5333d240f9e9ac9d","e","VisibilityConditions","IS_ADMIN","CAN_EDIT","READ_ONLY","SIGNED_IN","SIGNED_OUT","ALWAYS","StorageScope","BOARD","CARD","MEMBER","ORGANIZATION","StorageVisibility","SHARED","PRIVATE","BadgeColors","BLUE","GREEN","ORANGE","RED","YELLOW","PURPLE","PINK","SKY","LIME","LIGHTGRAY","3454881a11013d365bc6","length","configurable","writable","_TrelloConstants","BoardStorage","TypeError","this","__proto__","getPrototypeOf","Storage","read","DISCUSSION_STATUS","DISCUSSION_CARD_ID","DISCUSSION_STARTED_AT","DISCUSSION_PREVIOUS_ELAPSED","DISCUSSION_INTERVAL_ID","a","u","apply","arguments","Promise","done","resolve","then","Debug","boardData","getAll","cards","console","groupCollapsed","log","JSON","stringify","getContext","groupEnd","map","card","id","cardsData","forEach","cardStorage","boardStorage","deleteMultiple","all","_ref3","_asyncToGenerator","deleteMultipleById","CardStorage","DISCUSSION_ELAPSED","DISCUSSION_THUMBS","VOTES","_x7","newStatus","write","newElapsed","newThumbs","newVotes","delete","LeanCoffeeSettings","window","environment","version","_this","showData","isProduction","wipeData","w","TrelloPowerUp","iframe","document","querySelector","style","display","sizeTo","scope","visibility","assign","cardId","set","entries","remove","settingsInstance","process","init"],"mappings":"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","file":"settings.2f715bdeb68ff633a264.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"bd5530b150283a4b1bad\");\n","export const VisibilityConditions = {\n  IS_ADMIN: 'admin',\n  CAN_EDIT: 'edit',\n  READ_ONLY: 'readOnly',\n  SIGNED_IN: 'signedIn',\n  SIGNED_OUT: 'signedOut',\n  ALWAYS: 'always'\n};\n\nexport const StorageScope = {\n  BOARD: 'board',\n  CARD: 'card',\n  MEMBER: 'member',\n  ORGANIZATION: 'organization'\n};\n\nexport const StorageVisibility = {\n  SHARED: 'shared',\n  PRIVATE: 'private'\n};\n\nexport const BadgeColors = {\n  BLUE: 'blue',\n  GREEN: 'green',\n  ORANGE: 'orange',\n  RED: 'red',\n  YELLOW: 'yellow',\n  PURPLE: 'purple',\n  PINK: 'pink',\n  SKY: 'sky',\n  LIME: 'lime',\n  LIGHTGRAY: 'light-gray'\n};\n","import { StorageScope, StorageVisibility } from '../TrelloConstants';\nimport Storage from './Storage';\n\nclass BoardStorage extends Storage {\n    static DISCUSSION_STATUS = 'leancoffeeDiscussionStatus';\n    static DISCUSSION_CARD_ID = 'leancoffeeDiscussionCardId';\n    static DISCUSSION_STARTED_AT = 'leancoffeeDiscussionStartedAt';\n    static DISCUSSION_PREVIOUS_ELAPSED = 'leancoffeeDiscussionPreviousElapsed';\n    static DISCUSSION_INTERVAL_ID = 'leancoffeeDiscussionIntervalId';\n\n    constructor() {\n      super(StorageScope.BOARD, StorageVisibility.SHARED);\n    }\n\n    getDiscussionStatus(t) {\n      return this.read(t, BoardStorage.DISCUSSION_STATUS);\n    }\n\n    getDiscussionCardId(t) {\n      return this.read(t, BoardStorage.DISCUSSION_CARD_ID);\n    }\n\n    getDiscussionStartedAt(t) {\n      return this.read(t, BoardStorage.DISCUSSION_STARTED_AT);\n    }\n\n    getDiscussionPreviousElapsed(t) {\n      return this.read(t, BoardStorage.DISCUSSION_PREVIOUS_ELAPSED);\n    }\n\n    getDiscussionIntervalId(t) {\n      return this.read(t, BoardStorage.DISCUSSION_INTERVAL_ID);\n    }\n}\n\nexport default BoardStorage;\n\n","import { StorageVisibility } from './TrelloConstants';\nimport BoardStorage from './storage/BoardStorage';\nimport CardStorage from './storage/CardStorage';\n\nclass Debug {\n  static async showData(t, Promise) {\n    const boardData = await t.getAll();\n    const cards = await t.cards('all');\n\n    console.groupCollapsed('Current context');\n    console.log(JSON.stringify(t.getContext(), null, 2));\n    console.groupEnd();\n\n    console.groupCollapsed('Board data');\n    console.log(JSON.stringify(boardData, null, 2));\n    console.groupEnd();\n\n    const cardsPromises = Promise.map(cards, card =>\n      t.get(card.id, StorageVisibility.SHARED));\n\n    cardsPromises.then(cardsData => cardsData.forEach((card) => {\n      console.groupCollapsed('Card data');\n      console.log(JSON.stringify(card, null, 2));\n      console.groupEnd();\n    }));\n  }\n\n  static async wipeData(t, Promise, cardStorage, boardStorage) {\n    boardStorage.deleteMultiple(t, [\n      BoardStorage.DISCUSSION_STATUS,\n      BoardStorage.DISCUSSION_CARD_ID,\n      BoardStorage.DISCUSSION_STARTED_AT,\n      BoardStorage.DISCUSSION_PREVIOUS_ELAPSED,\n      BoardStorage.DISCUSSION_INTERVAL_ID\n    ]);\n\n    const cards = await t.cards('all');\n\n    Promise.all(cards.map(async (card) => {\n      await cardStorage.deleteMultipleById(t, [\n        CardStorage.DISCUSSION_STATUS,\n        CardStorage.DISCUSSION_ELAPSED,\n        CardStorage.DISCUSSION_THUMBS,\n        CardStorage.VOTES\n      ], card.id);\n    })).then(() => {\n      console.log('Data wipe finished');\n    });\n  }\n}\n\nexport default Debug;\n","import { StorageScope, StorageVisibility } from '../TrelloConstants';\nimport Storage from './Storage';\n\nclass CardStorage extends Storage {\n  static DISCUSSION_STATUS = 'leancoffeeDiscussionStatus';\n  static DISCUSSION_ELAPSED = 'leancoffeeDiscussionElapsed';\n  static DISCUSSION_THUMBS = 'leancoffeeDiscussionThumbs';\n  static VOTES = 'leancoffeeVotes';\n\n  constructor() {\n    super(StorageScope.CARD, StorageVisibility.SHARED);\n  }\n\n  getDiscussionStatus(t) {\n    return this.read(t, CardStorage.DISCUSSION_STATUS);\n  }\n\n  getDiscussionElapsed(t) {\n    return this.read(t, CardStorage.DISCUSSION_ELAPSED);\n  }\n\n  getDiscussionThumbs(t) {\n    return this.read(t, CardStorage.DISCUSSION_THUMBS);\n  }\n\n  saveDiscussionStatus(t, newStatus) {\n    return this.write(t, CardStorage.DISCUSSION_STATUS, newStatus);\n  }\n\n  saveDiscussionElapsed(t, newElapsed) {\n    return this.write(t, CardStorage.DISCUSSION_ELAPSED, newElapsed);\n  }\n\n  saveDiscussionThumbs(t, newThumbs) {\n    return this.write(t, CardStorage.DISCUSSION_THUMBS, newThumbs);\n  }\n\n  saveVotes(t, newVotes) {\n    return this.write(t, CardStorage.VOTES, newVotes);\n  }\n\n  deleteDiscussionThumbs(t) {\n    return this.delete(t, CardStorage.DISCUSSION_THUMBS);\n  }\n}\n\nexport default CardStorage;\n","import BoardStorage from './storage/BoardStorage';\nimport CardStorage from './storage/CardStorage';\nimport Debug from './Debug';\n\n\nclass LeanCoffeeSettings {\n  constructor(window, environment, version) {\n    this.w = window;\n    this.t = window.TrelloPowerUp.iframe();\n    this.Promise = window.TrelloPowerUp.Promise;\n    this.isProduction = environment === 'production';\n    this.boardStorage = new BoardStorage();\n    this.cardStorage = new CardStorage();\n  }\n\n  init() {\n    if (!this.isProduction) {\n      this.w.document.querySelector('.dev-only').style.display = 'block';\n    }\n\n    this.t.sizeTo('#settings');\n  }\n\n  showData = async () => {\n    if (this.isProduction) { return; }\n\n    Debug.showData(this.t, this.Promise);\n  };\n\n  wipeData = async () => {\n    if (this.isProduction) { return; }\n\n    Debug.wipeData(this.t, this.Promise, this.cardStorage, this.boardStorage);\n  };\n}\n\nexport default LeanCoffeeSettings;\n","import { StorageScope, StorageVisibility } from '../TrelloConstants';\n\nclass Storage {\n  constructor(scope = StorageScope.MEMBER, visibility = StorageVisibility.PRIVATE) {\n    Object.assign(this, { scope, visibility });\n  }\n\n  readById(t, key, cardId) {\n    return t.get(cardId, this.visibility, key);\n  }\n\n  read(t, key) {\n    return t.get(this.scope, this.visibility, key);\n  }\n\n  write(t, key, value) {\n    return t.set(this.scope, this.visibility, key, value);\n  }\n\n  writeMultiple(t, entries) {\n    return t.set(this.scope, this.visibility, entries);\n  }\n\n  delete(t, key) {\n    return t.remove(this.scope, this.visibility, key);\n  }\n\n  deleteMultiple(t, entries) {\n    return t.remove(this.scope, this.visibility, entries);\n  }\n\n  deleteMultipleById(t, entries, cardId) {\n    return t.remove(cardId, this.visibility, entries);\n  }\n}\n\nexport default Storage;\n","import LeanCoffeeSettings from './LeanCoffeeSettings';\n\nwindow.settingsInstance = new LeanCoffeeSettings(window, process.env.NODE_ENV, process.env.VERSION);\nwindow.settingsInstance.init();\n"],"sourceRoot":""}