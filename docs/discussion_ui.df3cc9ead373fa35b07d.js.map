{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/TrelloConstants.js","webpack:///./node_modules/parse-ms/index.js","webpack:///./src/storage/BoardStorage.js","webpack:///./node_modules/format-duration/index.js","webpack:///./src/LeanCoffeeDiscussionUI.js","webpack:///./src/discussion-ui.js","webpack:///./src/storage/CardStorage.js","webpack:///./src/storage/Storage.js","webpack:///./node_modules/add-zero/index.js","webpack:///./src/Notifications.js","webpack:///./src/Discussion.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","StorageScope","BOARD","CARD","MEMBER","ORGANIZATION","StorageVisibility","SHARED","PRIVATE","BadgeColors","BLUE","GREEN","ORANGE","RED","YELLOW","PURPLE","PINK","SKY","LIME","LIGHTGRAY","ms","TypeError","roundTowardZero","Math","floor","ceil","days","hours","minutes","seconds","milliseconds","BoardStorage","this","read","DISCUSSION_STATUS","DISCUSSION_CARD_ID","DISCUSSION_STARTED_AT","DISCUSSION_PREVIOUS_ELAPSED","DISCUSSION_INTERVAL_ID","POWER_UP_VERSION","version","write","Storage","parseMs","addZero","options","leading","sign","MESSAGES","NONE","ENDED","LeanCoffeeDiscussionUI","window","discussionStatus","cardStorage","getDiscussionStatus","isOngoingOrPausedForThisCard","Statuses","ONGOING","PAUSED","includes","previousStatus","toggleBadges","updateMessage","toggleVoting","updateStatusHeader","updateElapsed","updateThumbs","status","startedAt","boardStorage","getDiscussionStartedAt","previousElapsed","getDiscussionPreviousElapsed","elapsed","Date","now","badgeElapsed","classList","add","toLowerCase","remove","textContent","formatDuration","getDiscussionElapsed","badgeHeaderElapsed","innerText","thumbs","getDiscussionThumbs","currentMember","getContext","member","currentMemberThumbs","keys","Thumbs","forEach","thumbsType","count","filter","length","thumbsBadge","w","document","querySelector","saveDiscussionThumbs","visible","badges","style","display","voting","element","visibility","message","sizeTo","TrelloPowerUp","iframe","Promise","CardStorage","querySelectorAll","monitorDiscussion","intervalId","setInterval","discussionUIInstance","init","DISCUSSION_ELAPSED","DISCUSSION_THUMBS","DISCUSSION_BUTTON_LABEL","newStatus","newElapsed","newThumbs","newVotes","VOTES","newLabel","delete","scope","assign","cardId","set","entries","digits","size","isNegative","Number","buffer","toString","slice","Array","join","concat","Notifications","baseUrl","ELAPSED","audio","text","url","fetch","then","response","arrayBuffer","audioContext","decodeAudioData","audioBuffer","sourceNode","createBufferSource","connect","destination","type","AudioContext","webkitAudioContext","load","start","cardName","Notification","body","icon","permission","open","requestPermission","UP","DOWN","MIDDLE","Discussion","maxDiscussionDuration","boardStatus","getDiscussionCardId","card","cards","find","id","cardStatus","clearInterval","getDiscussionIntervalId","pause","saveElapsed","saveDiscussionElapsed","writeMultiple","getElapsed","saveDiscussionStatus","deleteDiscussionThumbs","notify","notifications","play","Types","show","deleteMultiple","err","Error"],"mappings":"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","file":"discussion_ui.df3cc9ead373fa35b07d.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"7d0f45dbb48403d2a9a6\");\n","export const VisibilityConditions = {\n  IS_ADMIN: 'admin',\n  CAN_EDIT: 'edit',\n  READ_ONLY: 'readOnly',\n  SIGNED_IN: 'signedIn',\n  SIGNED_OUT: 'signedOut',\n  ALWAYS: 'always'\n};\n\nexport const StorageScope = {\n  BOARD: 'board',\n  CARD: 'card',\n  MEMBER: 'member',\n  ORGANIZATION: 'organization'\n};\n\nexport const StorageVisibility = {\n  SHARED: 'shared',\n  PRIVATE: 'private'\n};\n\nexport const BadgeColors = {\n  BLUE: 'blue',\n  GREEN: 'green',\n  ORANGE: 'orange',\n  RED: 'red',\n  YELLOW: 'yellow',\n  PURPLE: 'purple',\n  PINK: 'pink',\n  SKY: 'sky',\n  LIME: 'lime',\n  LIGHTGRAY: 'light-gray'\n};\n","'use strict';\nmodule.exports = function (ms) {\n\tif (typeof ms !== 'number') {\n\t\tthrow new TypeError('Expected a number');\n\t}\n\n\tvar roundTowardZero = ms > 0 ? Math.floor : Math.ceil;\n\n\treturn {\n\t\tdays: roundTowardZero(ms / 86400000),\n\t\thours: roundTowardZero(ms / 3600000) % 24,\n\t\tminutes: roundTowardZero(ms / 60000) % 60,\n\t\tseconds: roundTowardZero(ms / 1000) % 60,\n\t\tmilliseconds: roundTowardZero(ms) % 1000\n\t};\n};\n","import { StorageScope, StorageVisibility } from '../TrelloConstants';\nimport Storage from './Storage';\n\nclass BoardStorage extends Storage {\n    static DISCUSSION_STATUS = 'leancoffeeDiscussionStatus';\n\n    static DISCUSSION_CARD_ID = 'leancoffeeDiscussionCardId';\n\n    static DISCUSSION_STARTED_AT = 'leancoffeeDiscussionStartedAt';\n\n    static DISCUSSION_PREVIOUS_ELAPSED = 'leancoffeeDiscussionPreviousElapsed';\n\n    static DISCUSSION_INTERVAL_ID = 'leancoffeeDiscussionIntervalId';\n\n    static POWER_UP_VERSION = 'powerUpVersion';\n\n    constructor() {\n      super(StorageScope.BOARD, StorageVisibility.SHARED);\n    }\n\n    getDiscussionStatus(t) {\n      return this.read(t, BoardStorage.DISCUSSION_STATUS);\n    }\n\n    getDiscussionCardId(t) {\n      return this.read(t, BoardStorage.DISCUSSION_CARD_ID);\n    }\n\n    getDiscussionStartedAt(t) {\n      return this.read(t, BoardStorage.DISCUSSION_STARTED_AT);\n    }\n\n    getDiscussionPreviousElapsed(t) {\n      return this.read(t, BoardStorage.DISCUSSION_PREVIOUS_ELAPSED);\n    }\n\n    getDiscussionIntervalId(t) {\n      return this.read(t, BoardStorage.DISCUSSION_INTERVAL_ID);\n    }\n\n    getPowerUpVersion(t) {\n      return this.read(t, BoardStorage.POWER_UP_VERSION);\n    }\n\n    setPowerUpVersion(t, version) {\n      return this.write(t, BoardStorage.POWER_UP_VERSION, version);\n    }\n}\n\nexport default BoardStorage;\n","var parseMs = require('parse-ms')\nvar addZero = require('add-zero')\n\nmodule.exports = function (ms, options) {\n  var leading = options && options.leading\n  var unsignedMs = ms < 0 ? -ms : ms\n  var sign = ms <= -1000 ? '-' : ''\n  var t = parseMs(unsignedMs)\n  var seconds = addZero(t.seconds)\n  if (t.days) return sign + t.days + ':' + addZero(t.hours) + ':' + addZero(t.minutes) + ':' + seconds\n  if (t.hours) return sign + (leading ? addZero(t.hours) : t.hours) + ':' + addZero(t.minutes) + ':' + seconds\n  return sign + (leading ? addZero(t.minutes) : t.minutes) + ':' + seconds\n}\n","import formatDuration from 'format-duration';\n\nimport BoardStorage from './storage/BoardStorage';\nimport CardStorage from './storage/CardStorage';\nimport { Statuses, Thumbs } from './Discussion';\n\nconst MESSAGES = {\n  NONE: 'This card is not being discussed at the moment.',\n  ENDED: 'The discussion on this card has ended.'\n};\n\n\nclass LeanCoffeeDiscussionUI {\n  constructor(window) {\n    this.w = window;\n    this.t = window.TrelloPowerUp.iframe();\n    this.Promise = window.TrelloPowerUp.Promise;\n    this.boardStorage = new BoardStorage();\n    this.cardStorage = new CardStorage();\n\n    this.badges = this.w.document.querySelector('.badges');\n    this.badgeElapsed = this.w.document.querySelector('.badge-elapsed');\n    this.badgeHeaderElapsed = this.w.document.querySelector('.badge-header-elapsed');\n    this.message = this.w.document.querySelector('.message');\n    this.voting = this.w.document.querySelectorAll('.voting');\n  }\n\n  async init() {\n    this.monitorDiscussion();\n    this.intervalId = setInterval(this.monitorDiscussion, 1000);\n  }\n\n  monitorDiscussion = async () => {\n    const discussionStatus = await this.cardStorage.getDiscussionStatus(this.t);\n    const isOngoingOrPausedForThisCard = [Statuses.ONGOING, Statuses.PAUSED].includes(discussionStatus);\n\n    if (!!discussionStatus && this.previousStatus === discussionStatus && !isOngoingOrPausedForThisCard) {\n      return;\n    }\n\n    switch (discussionStatus) {\n      case Statuses.ENDED: {\n        // when discussion ends, hide badge and display message\n        this.toggleBadges(false);\n        this.updateMessage(MESSAGES.ENDED);\n        break;\n      } case Statuses.ONGOING: {\n        // when discussion is ongoing, update badge (display ongoing and 1-sec res timer)\n        if (this.previousStatus !== discussionStatus) {\n          this.toggleVoting(false);\n          this.toggleBadges(true);\n          this.updateMessage('');\n\n          this.updateStatusHeader(Statuses.ONGOING);\n        }\n\n        this.updateElapsed(Statuses.ONGOING);\n        break;\n      } case Statuses.PAUSED: {\n        // when discussion is paused, update badge (display elapsed and three buttons to deal with discussion)\n        if (this.previousStatus !== discussionStatus) {\n          this.updateMessage('');\n          this.toggleVoting(true);\n          this.toggleBadges(true);\n          this.updateStatusHeader(Statuses.PAUSED);\n          this.updateElapsed(Statuses.PAUSED);\n        }\n\n        this.updateThumbs();\n        break;\n      } default:\n        this.toggleBadges(false);\n        this.toggleVoting(false);\n        this.updateMessage(MESSAGES.NONE);\n        break;\n    }\n\n    this.previousStatus = discussionStatus;\n  };\n\n  updateElapsed = async (status) => {\n    if (status === Statuses.ONGOING) {\n      const startedAt = await this.boardStorage.getDiscussionStartedAt(this.t);\n      const previousElapsed = await this.boardStorage.getDiscussionPreviousElapsed(this.t) || 0;\n      const elapsed = startedAt ? Date.now() - startedAt : 0;\n\n      this.badgeElapsed.classList.add(status.toLowerCase());\n      this.badgeElapsed.classList.remove(Statuses.PAUSED.toLowerCase());\n      this.badgeElapsed.textContent = `Ongoing → ${formatDuration(elapsed + previousElapsed)}`;\n    } else {\n      const elapsed = await this.cardStorage.getDiscussionElapsed(this.t);\n\n      this.badgeElapsed.classList.add(status.toLowerCase());\n      this.badgeElapsed.classList.remove(Statuses.ONGOING.toLowerCase());\n      this.badgeElapsed.textContent = `Elapsed → ${formatDuration(elapsed)}`;\n    }\n  };\n\n  updateStatusHeader = (status) => {\n    if (status === Statuses.PAUSED) {\n      this.badgeHeaderElapsed.innerText = 'Should we keep discussing?';\n    } else {\n      this.badgeHeaderElapsed.innerText = 'Status';\n    }\n  };\n\n  updateThumbs = async () => {\n    const thumbs = await this.cardStorage.getDiscussionThumbs(this.t) || {};\n    const currentMember = this.t.getContext().member;\n    const currentMemberThumbs = thumbs[currentMember];\n\n    Object.keys(Thumbs).forEach((thumbsType) => {\n      const count = Object.keys(thumbs).filter(key => thumbs[key] === Thumbs[thumbsType]).length;\n      const thumbsBadge = this.w.document.querySelector(`.voting-${thumbsType.toLowerCase()}`);\n      thumbsBadge.innerText = count;\n\n      if (thumbsType === currentMemberThumbs) {\n        thumbsBadge.classList.add('own');\n      } else {\n        thumbsBadge.classList.remove('own');\n      }\n    });\n  };\n\n  handleThumbs = async (thumbsType) => {\n    const thumbs = await this.cardStorage.getDiscussionThumbs(this.t) || {};\n    const currentMember = this.t.getContext().member;\n\n    if (thumbs[currentMember] === thumbsType) {\n      delete thumbs[currentMember];\n    } else {\n      thumbs[currentMember] = thumbsType;\n    }\n\n    this.cardStorage.saveDiscussionThumbs(this.t, thumbs);\n  };\n\n  toggleBadges = (visible) => {\n    this.badges.style.display = visible ? 'grid' : 'none';\n  };\n\n  toggleVoting = (visible) => {\n    this.voting.forEach((element) => {\n      element.style.visibility = visible ? 'visible' : 'hidden';\n    });\n  };\n\n  updateMessage = (message) => {\n    this.message.innerText = message;\n    this.message.style.display = 'block';\n    this.t.sizeTo('body');\n  };\n}\n\nexport default LeanCoffeeDiscussionUI;\n","import LeanCoffeeDiscussionUI from './LeanCoffeeDiscussionUI';\n\nwindow.discussionUIInstance = new LeanCoffeeDiscussionUI(window);\nwindow.discussionUIInstance.init();\n","import { StorageScope, StorageVisibility } from '../TrelloConstants';\nimport Storage from './Storage';\n\nclass CardStorage extends Storage {\n  static DISCUSSION_STATUS = 'leancoffeeDiscussionStatus';\n\n  static DISCUSSION_ELAPSED = 'leancoffeeDiscussionElapsed';\n\n  static DISCUSSION_THUMBS = 'leancoffeeDiscussionThumbs';\n\n  static VOTES = 'leancoffeeVotes';\n\n  static DISCUSSION_BUTTON_LABEL = 'discussionButtonLabel';\n\n  constructor() {\n    super(StorageScope.CARD, StorageVisibility.SHARED);\n  }\n\n  getDiscussionStatus(t) {\n    return this.read(t, CardStorage.DISCUSSION_STATUS);\n  }\n\n  getDiscussionElapsed(t) {\n    return this.read(t, CardStorage.DISCUSSION_ELAPSED);\n  }\n\n  getDiscussionThumbs(t) {\n    return this.read(t, CardStorage.DISCUSSION_THUMBS);\n  }\n\n  getDiscussionButtonLabel(t) {\n    return this.read(t, CardStorage.DISCUSSION_BUTTON_LABEL);\n  }\n\n  saveDiscussionStatus(t, newStatus) {\n    return this.write(t, CardStorage.DISCUSSION_STATUS, newStatus);\n  }\n\n  saveDiscussionElapsed(t, newElapsed) {\n    return this.write(t, CardStorage.DISCUSSION_ELAPSED, newElapsed);\n  }\n\n  saveDiscussionThumbs(t, newThumbs) {\n    return this.write(t, CardStorage.DISCUSSION_THUMBS, newThumbs);\n  }\n\n  saveVotes(t, newVotes) {\n    return this.write(t, CardStorage.VOTES, newVotes);\n  }\n\n  saveDiscussionButtonLabel(t, newLabel) {\n    return this.write(t, CardStorage.DISCUSSION_BUTTON_LABEL, newLabel);\n  }\n\n  deleteDiscussionThumbs(t) {\n    return this.delete(t, CardStorage.DISCUSSION_THUMBS);\n  }\n}\n\nexport default CardStorage;\n","import { StorageScope, StorageVisibility } from '../TrelloConstants';\n\nclass Storage {\n  constructor(scope = StorageScope.MEMBER, visibility = StorageVisibility.PRIVATE) {\n    Object.assign(this, { scope, visibility });\n  }\n\n  readById(t, key, cardId) {\n    return t.get(cardId, this.visibility, key);\n  }\n\n  read(t, key) {\n    return t.get(this.scope, this.visibility, key);\n  }\n\n  write(t, key, value) {\n    return t.set(this.scope, this.visibility, key, value);\n  }\n\n  writeMultiple(t, entries) {\n    return t.set(this.scope, this.visibility, entries);\n  }\n\n  delete(t, key) {\n    return t.remove(this.scope, this.visibility, key);\n  }\n\n  deleteMultiple(t, entries) {\n    return t.remove(this.scope, this.visibility, entries);\n  }\n\n  deleteMultipleById(t, entries, cardId) {\n    return t.remove(cardId, this.visibility, entries);\n  }\n}\n\nexport default Storage;\n","(function(exports) {\n\n  'use strict';\n\n  function addZero(value, digits) {\n    digits = digits || 2;\n\n    var isNegative = Number(value) < 0;\n    var buffer = value.toString();\n    var size = 0;\n\n    // Strip minus sign if number is negative\n    if(isNegative) {\n      buffer = buffer.slice(1);\n    }\n\n    size = digits - buffer.length + 1;\n    buffer = new Array(size).join('0').concat(buffer);\n\n    // Adds back minus sign if needed\n    return (isNegative ? '-' : '') + buffer;\n  }\n\n  if(typeof define === 'function' && define.amd) {\n    define(function() { return addZero; });\n  } else if(typeof module !== 'undefined' && module.exports) {\n    module.exports = addZero;\n  } else {\n    exports.addZero = addZero;\n  }\n\n})(this);\n","class Notifications {\n  Types = {\n    ELAPSED: {\n      audio: 'assets/looking_down.mp3',\n      text: 'The timer has elapsed'\n    }\n  };\n\n  constructor(window, baseUrl) {\n    this.w = window;\n    this.baseUrl = baseUrl;\n  }\n\n  load(url) {\n    return fetch(url)\n      .then(response => response.arrayBuffer())\n      .then(arrayBuffer => this.audioContext.decodeAudioData(arrayBuffer))\n      .then((audioBuffer) => {\n        const sourceNode = this.audioContext.createBufferSource();\n        sourceNode.buffer = audioBuffer;\n        sourceNode.connect(this.audioContext.destination);\n        return sourceNode;\n      });\n  }\n\n  async play(type) {\n    this.audioContext = this.audioContext || new (this.w.AudioContext || this.w.webkitAudioContext)();\n    const audio = await this.load(`${this.baseUrl}/${type.audio}`);\n    audio.start();\n  }\n\n  open(type, cardName) {\n    // eslint-disable-next-line no-new\n    new this.w.Notification(cardName, {\n      body: type.text,\n      icon: `${this.baseUrl}/assets/timer.png`\n    });\n  }\n\n  show(type, cardName) {\n    if ((!('Notification' in this.w)) || this.w.Notification.permission === 'denied') { return; }\n\n    if (this.w.Notification.permission === 'granted') {\n      this.open(type, cardName);\n    } else {\n      this.w.Notification.requestPermission((permission) => {\n        if (permission === 'granted') {\n          this.open(type, cardName);\n        }\n      });\n    }\n  }\n}\n\nexport default Notifications;\n","import BoardStorage from './storage/BoardStorage';\nimport CardStorage from './storage/CardStorage';\nimport Notifications from './Notifications';\n\nexport const Statuses = {\n  ONGOING: 'ONGOING',\n  PAUSED: 'PAUSED',\n  ENDED: 'ENDED'\n};\n\nexport const Thumbs = {\n  UP: 'UP',\n  DOWN: 'DOWN',\n  MIDDLE: 'MIDDLE'\n};\n\nclass Discussion {\n  constructor(window, baseUrl, maxDiscussionDuration) {\n    this.w = window;\n    this.baseUrl = baseUrl;\n    this.notifications = new Notifications(this.w, this.baseUrl);\n    this.maxDiscussionDuration = maxDiscussionDuration;\n    this.boardStorage = new BoardStorage();\n    this.cardStorage = new CardStorage();\n  }\n\n  isOngoingOrPausedForAnotherCard = async (t) => {\n    const boardStatus = await this.boardStorage.getDiscussionStatus(t);\n    const cardId = await this.boardStorage.getDiscussionCardId(t);\n\n    return [Statuses.ONGOING, Statuses.PAUSED].includes(boardStatus) && cardId !== t.getContext().card;\n  };\n\n  hasNotBeenArchived = async (t, cardId) => {\n    const allCards = await t.cards('id', 'name');\n    return !!allCards.find(card => card.id === cardId);\n  };\n\n  isOngoingFor = async (t) => {\n    const cardStatus = await this.cardStorage.getDiscussionStatus(t);\n    return Statuses.ONGOING === cardStatus;\n  };\n\n  isPausedFor = async (t) => {\n    const cardStatus = await this.cardStorage.getDiscussionStatus(t);\n    return Statuses.PAUSED === cardStatus;\n  };\n\n  getElapsed = t => this.cardStorage.getDiscussionElapsed(t);\n\n  updateElapsed = async (t) => {\n    const startedAt = await this.boardStorage.getDiscussionStartedAt(t);\n    const elapsed = Date.now() - startedAt;\n\n    if (elapsed > this.maxDiscussionDuration) {\n      clearInterval(await this.boardStorage.getDiscussionIntervalId(t));\n      this.pause(t, true);\n    } else {\n      this.saveElapsed(t);\n    }\n  };\n\n  saveElapsed = async (t) => {\n    const startedAt = await this.boardStorage.getDiscussionStartedAt(t);\n    const previousElapsed = await this.boardStorage.getDiscussionPreviousElapsed(t) || 0;\n    const elapsed = startedAt ? Date.now() - startedAt : 0;\n\n    this.cardStorage.saveDiscussionElapsed(t, (elapsed + previousElapsed));\n  };\n\n  start = async (t) => {\n    this.boardStorage.writeMultiple(t, {\n      [BoardStorage.DISCUSSION_STATUS]: Statuses.ONGOING,\n      [BoardStorage.DISCUSSION_CARD_ID]: t.getContext().card,\n      [BoardStorage.DISCUSSION_STARTED_AT]: Date.now(),\n      [BoardStorage.DISCUSSION_PREVIOUS_ELAPSED]: await this.getElapsed(t),\n      [BoardStorage.DISCUSSION_INTERVAL_ID]: setInterval(this.updateElapsed, 5000, t)\n    });\n\n    await this.cardStorage.saveDiscussionStatus(t, Statuses.ONGOING);\n    await this.cardStorage.deleteDiscussionThumbs(t);\n  };\n\n  pause = async (t, notify = false) => {\n    const intervalId = await this.boardStorage.getDiscussionIntervalId(t);\n    const cardId = await this.boardStorage.getDiscussionCardId(t);\n    const cardName = (await t.cards('id', 'name')).find(card => card.id === cardId).name;\n\n    clearInterval(intervalId);\n\n    this.cardStorage.saveDiscussionStatus(t, Statuses.PAUSED);\n    this.saveElapsed(t);\n    this.boardStorage.writeMultiple(t, {\n      [BoardStorage.DISCUSSION_STATUS]: Statuses.PAUSED,\n      [BoardStorage.DISCUSSION_STARTED_AT]: null,\n      [BoardStorage.DISCUSSION_PREVIOUS_ELAPSED]: await this.getElapsed(t),\n      [BoardStorage.DISCUSSION_INTERVAL_ID]: null\n    });\n\n    if (notify) {\n      this.notifications.play(this.notifications.Types.ELAPSED);\n      this.notifications.show(this.notifications.Types.ELAPSED, cardName);\n    }\n  };\n\n  end = async (t) => {\n    const intervalId = await this.boardStorage.getDiscussionIntervalId(t);\n    clearInterval(intervalId);\n\n    try {\n      await this.cardStorage.saveDiscussionStatus(t, Statuses.ENDED);\n      await this.saveElapsed(t);\n      await this.cardStorage.deleteMultiple(t, [CardStorage.DISCUSSION_THUMBS]);\n      await this.boardStorage.deleteMultiple(t, [\n        BoardStorage.DISCUSSION_STATUS,\n        BoardStorage.DISCUSSION_CARD_ID,\n        BoardStorage.DISCUSSION_STARTED_AT,\n        BoardStorage.DISCUSSION_PREVIOUS_ELAPSED,\n        BoardStorage.DISCUSSION_INTERVAL_ID\n      ]);\n    } catch (err) {\n      throw new Error(err);\n    }\n  };\n}\n\nexport default Discussion;\n"],"sourceRoot":""}