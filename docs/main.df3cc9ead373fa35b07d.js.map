{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/TrelloConstants.js","webpack:///./node_modules/parse-ms/index.js","webpack:///./src/badges/ElapsedCardBadge.js","webpack:///./src/badges/ElapsedCardDetailBadge.js","webpack:///./src/badges/VotingCardBadge.js","webpack:///./src/badges/VotingCardDetailBadge.js","webpack:///./src/Voting.js","webpack:///./src/UpdateChecker.js","webpack:///./src/index.js","webpack:///./src/LeanCoffeePowerUp.js","webpack:///./src/storage/BoardStorage.js","webpack:///./node_modules/format-duration/index.js","webpack:///./src/storage/CardStorage.js","webpack:///./src/storage/Storage.js","webpack:///./node_modules/add-zero/index.js","webpack:///./src/Notifications.js","webpack:///./src/Discussion.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","StorageScope","BOARD","CARD","MEMBER","ORGANIZATION","StorageVisibility","SHARED","PRIVATE","BadgeColors","BLUE","GREEN","ORANGE","RED","YELLOW","PURPLE","PINK","SKY","LIME","LIGHTGRAY","ms","TypeError","roundTowardZero","Math","floor","ceil","days","hours","minutes","seconds","milliseconds","ElapsedCardBadge","discussion","elapsed","formatDuration","isOngoingFor","isPausedFor","this","render","EMPTY_TITLE","getElapsed","title","getTitle","text","getText","color","getColor","ElapsedCardDetailBadge","cardStorage","getDiscussionStatus","Statuses","ENDED","VotingCardBadge","baseUrl","voting","votes","getVotes","values","reduce","knownVoters","vote","username","push","fullName","voters","getVoters","length","hasVoted","hasCurrentMemberVoted","icon","VotingCardDetailBadge","items","popup","commonData","callback","showVoters","Voting","trello","read","CardStorage","VOTES","getContext","member","cardId","readById","keys","filter","currentList","list","cards","cardIds","map","card","id","countVotesByMember","getMaxVotes","promise","all","total","Promise","UpdateChecker","storage","storedVersion","getPowerUpVersion","process","url","args","version","storeNewVersion","height","setPowerUpVersion","hostname","port","window","TrelloPowerUp","maxDiscussionDuration","updateChecker","hasBeenUpdated","dark","light","showMenu","undefined","content","type","signUrl","elapsedCardBadge","votingCardBadge","badge","getButtonLabel","handleDiscussion","handleVoting","elapsedCardDetailBadge","votingCardDetailBadge","forEach","deleteMultipleById","closePopup","opts","sortedIds","leanCoffeeVotes","countVotesByCard","assign","sort","cardA","cardB","boardStorage","canCurrentMemberVote","currentMember","avatar","saveVotes","maxVotes","isOngoingOrPausedForAnotherCard","boardStatus","getDiscussionCardId","hasNotBeenArchived","cardBeingDiscussed","find","currentCardBeingDiscussed","currentDiscussionStatus","console","warn","deleteMultiple","BoardStorage","DISCUSSION_STATUS","DISCUSSION_CARD_ID","DISCUSSION_STARTED_AT","DISCUSSION_PREVIOUS_ELAPSED","DISCUSSION_INTERVAL_ID","t2","pause","saveDiscussionButtonLabel","end","start","label","getDiscussionButtonLabel","setTimeout","w","Discussion","initialize","handleBoardButtons","handleCardBackSection","handleCardBadges","handleCardButtons","handleCardDetailBadges","handleListActions","handleListSorters","handleEnable","showSettings","POWER_UP_VERSION","write","Storage","parseMs","addZero","options","leading","sign","DISCUSSION_ELAPSED","DISCUSSION_THUMBS","DISCUSSION_BUTTON_LABEL","newStatus","newElapsed","newThumbs","newVotes","newLabel","delete","scope","visibility","set","entries","remove","digits","size","isNegative","Number","buffer","toString","slice","Array","join","concat","Notifications","ELAPSED","audio","fetch","then","response","arrayBuffer","audioContext","decodeAudioData","audioBuffer","sourceNode","createBufferSource","connect","destination","AudioContext","webkitAudioContext","load","cardName","Notification","body","permission","open","requestPermission","ONGOING","PAUSED","Thumbs","UP","DOWN","MIDDLE","includes","cardStatus","getDiscussionElapsed","startedAt","getDiscussionStartedAt","Date","now","clearInterval","getDiscussionIntervalId","saveElapsed","previousElapsed","getDiscussionPreviousElapsed","saveDiscussionElapsed","writeMultiple","setInterval","updateElapsed","saveDiscussionStatus","deleteDiscussionThumbs","notify","intervalId","notifications","play","Types","show","err","Error"],"mappings":"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","file":"main.df3cc9ead373fa35b07d.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"3177845424933048caec\");\n","export const VisibilityConditions = {\n  IS_ADMIN: 'admin',\n  CAN_EDIT: 'edit',\n  READ_ONLY: 'readOnly',\n  SIGNED_IN: 'signedIn',\n  SIGNED_OUT: 'signedOut',\n  ALWAYS: 'always'\n};\n\nexport const StorageScope = {\n  BOARD: 'board',\n  CARD: 'card',\n  MEMBER: 'member',\n  ORGANIZATION: 'organization'\n};\n\nexport const StorageVisibility = {\n  SHARED: 'shared',\n  PRIVATE: 'private'\n};\n\nexport const BadgeColors = {\n  BLUE: 'blue',\n  GREEN: 'green',\n  ORANGE: 'orange',\n  RED: 'red',\n  YELLOW: 'yellow',\n  PURPLE: 'purple',\n  PINK: 'pink',\n  SKY: 'sky',\n  LIME: 'lime',\n  LIGHTGRAY: 'light-gray'\n};\n","'use strict';\nmodule.exports = function (ms) {\n\tif (typeof ms !== 'number') {\n\t\tthrow new TypeError('Expected a number');\n\t}\n\n\tvar roundTowardZero = ms > 0 ? Math.floor : Math.ceil;\n\n\treturn {\n\t\tdays: roundTowardZero(ms / 86400000),\n\t\thours: roundTowardZero(ms / 3600000) % 24,\n\t\tminutes: roundTowardZero(ms / 60000) % 60,\n\t\tseconds: roundTowardZero(ms / 1000) % 60,\n\t\tmilliseconds: roundTowardZero(ms) % 1000\n\t};\n};\n","import formatDuration from 'format-duration';\n\nimport { BadgeColors } from '../TrelloConstants';\n\n\nclass ElapsedCardBadge {\n  EMPTY_TITLE = '';\n\n  constructor(discussion) {\n    this.discussion = discussion;\n    this.render = this.render.bind(this);\n  }\n\n  getTitle() {\n    return this.EMPTY_TITLE;\n  }\n\n  getText = async (t, elapsed) => formatDuration(elapsed);\n\n  getColor = async (t) => {\n    const isOngoing = await this.discussion.isOngoingFor(t);\n\n    if (isOngoing) { return BadgeColors.ORANGE; }\n\n    return await this.discussion.isPausedFor(t) ? BadgeColors.YELLOW : BadgeColors.LIGHTGRAY;\n  };\n\n\n  // Unable to use class properties here because I need to call\n  // it from a subclass, and it's currently broken - see:\n  // https://github.com/babel/babel/issues/5104\n  //\n  // Upgrading to Babel 7.x should solve it.\n  async render(t) {\n    const elapsed = await this.discussion.getElapsed(t);\n    if (!elapsed) { return null; }\n\n    return {\n      title: this.getTitle(t),\n      text: await this.getText(t, elapsed),\n      color: await this.getColor(t)\n    };\n  }\n}\n\nexport default ElapsedCardBadge;\n","import { Statuses } from '../Discussion';\nimport ElapsedCardBadge from './ElapsedCardBadge';\n\n\nclass ElapsedCardDetailBadge extends ElapsedCardBadge {\n  getTitle = () => 'Discussion time';\n\n  render = async (t) => {\n    const discussionStatus = await this.discussion.cardStorage.getDiscussionStatus(t);\n    if (discussionStatus !== Statuses.ENDED) { return null; }\n\n    return super.render(t);\n  };\n}\n\nexport default ElapsedCardDetailBadge;\n","class VotingCardBadge {\n  constructor(baseUrl, voting) {\n    this.baseUrl = baseUrl;\n    this.voting = voting;\n    this.render = this.render.bind(this);\n  }\n\n  getVoters = async (t) => {\n    const votes = await this.voting.getVotes(t) || {};\n\n    return Object.values(votes).reduce((knownVoters, vote) => {\n      if (vote.username) {\n        knownVoters.push({ text: `${vote.username} (${vote.fullName})` });\n      }\n\n      return knownVoters;\n    }, []);\n  };\n\n  // Unable to use class properties here because I need to call\n  // it from a subclass, and it's currently broken - see:\n  // https://github.com/babel/babel/issues/5104\n  //\n  // Upgrading to Babel 7.x should solve it.\n  async render(t) {\n    const voters = await this.getVoters(t);\n    if (!voters.length) { return null; }\n\n    const hasVoted = await this.voting.hasCurrentMemberVoted(t);\n\n    return {\n      text: voters.length,\n      color: hasVoted ? 'blue' : null,\n      icon: `${this.baseUrl}/assets/powerup/${hasVoted ? 'heart_white.svg' : 'heart.svg'}`,\n    };\n  }\n}\n\nexport default VotingCardBadge;\n","import VotingCardBadge from './VotingCardBadge';\n\nclass VotingCardDetailBadge extends VotingCardBadge {\n  showVoters = async (t) => {\n    const items = await this.getVoters(t);\n\n    if (!items.length) { return; }\n\n    t.popup({\n      title: 'Voters',\n      items\n    });\n  };\n\n  render = async (t) => {\n    const commonData = await super.render(t);\n\n    if (commonData) {\n      commonData.title = 'Voters';\n      delete commonData.icon;\n      commonData.callback = this.showVoters;\n    }\n\n    return commonData;\n  };\n}\n\nexport default VotingCardDetailBadge;\n","import CardStorage from './storage/CardStorage';\n\nclass Voting {\n  constructor(trello) {\n    this.cardStorage = new CardStorage();\n    this.promise = trello.Promise;\n  }\n\n  hasCurrentMemberVoted = async (t) => {\n    const votes = await this.cardStorage.read(t, CardStorage.VOTES);\n    if (!votes) { return false; }\n\n    const currentMember = t.getContext().member;\n    return !!votes[currentMember];\n  };\n\n  getVotes = async t => this.cardStorage.read(t, CardStorage.VOTES);\n\n  countVotesByCard = async (t, cardId) => {\n    const votes = await this.cardStorage.readById(t, CardStorage.VOTES, cardId);\n\n    if (!votes) { return 0; }\n\n    return Object.keys(votes).filter(key => votes[key]).length;\n  };\n\n  getMaxVotes = async (t) => {\n    const currentList = await t.list('cards');\n\n    // http://www.leanmath.com/blog-entry/multi-voting-math-or-n3\n    return Math.ceil(currentList.cards.length / 3);\n  };\n\n  canCurrentMemberVote = async (t) => {\n    if (await this.hasCurrentMemberVoted(t)) { return true; }\n\n    const currentList = await t.list('cards');\n    const cardIds = currentList.cards.map(card => card.id);\n    const currentMemberVotes = await this.countVotesByMember(t, cardIds);\n    const maxVotes = await this.getMaxVotes(t);\n\n    return currentMemberVotes < maxVotes;\n  };\n\n  countVotesByMember = async (t, cardIds) => {\n    const listVotes = await this.promise.all(cardIds.map(async (cardId) => {\n      const votes = await this.cardStorage.readById(t, CardStorage.VOTES, cardId);\n      if (!votes) { return 0; }\n\n      const currentMember = t.getContext().member;\n      return !!votes[currentMember];\n    }));\n\n    return listVotes.reduce((total, vote) => total + vote, 0);\n  };\n}\n\nexport default Voting;\n","const LAST_UNCHECKED_VERSION = '0.6.2';\n\nclass UpdateChecker {\n  constructor(storage) {\n    this.storage = storage;\n  }\n\n  hasBeenUpdated = async (t) => {\n    this.storedVersion = await this.storage.getPowerUpVersion(t);\n    return !this.storedVersion || (this.storedVersion !== process.env.VERSION);\n  };\n\n  showMenu = async (t) => {\n    const storedVersion = await this.storage.getPowerUpVersion(t);\n\n    t.popup({\n      title: `Updated from ${storedVersion || LAST_UNCHECKED_VERSION} to ${process.env.VERSION}`,\n      url: './release-notes.html',\n      args: { version: process.env.VERSION },\n      callback: this.storeNewVersion,\n      height: 65\n    });\n  };\n\n  storeNewVersion = async (t) => {\n    await this.storage.setPowerUpVersion(t, process.env.VERSION);\n  };\n}\n\nexport default UpdateChecker;\n","import LeanCoffeePowerUp from './LeanCoffeePowerUp';\n\nconst { hostname, port } = process.env.CONFIG[process.env.NODE_ENV];\nconst DEFAULT_DISCUSSION_DURATION = 5 * 60 * 1000;\n\n/* eslint-disable prefer-template */\nconst instance = new LeanCoffeePowerUp({\n  window,\n  TrelloPowerUp: window.TrelloPowerUp,\n  baseUrl: `${hostname}${port ? ':' + port : ''}`,\n  maxDiscussionDuration: DEFAULT_DISCUSSION_DURATION\n});\n\ninstance.start();\n","import BoardStorage from './storage/BoardStorage';\nimport CardStorage from './storage/CardStorage';\nimport ElapsedCardBadge from './badges/ElapsedCardBadge';\nimport ElapsedCardDetailBadge from './badges/ElapsedCardDetailBadge';\nimport VotingCardBadge from './badges/VotingCardBadge';\nimport VotingCardDetailBadge from './badges/VotingCardDetailBadge';\nimport Discussion from './Discussion';\nimport Voting from './Voting';\nimport UpdateChecker from './UpdateChecker';\n\n\nclass LeanCoffeePowerUp {\n  constructor({\n    window, TrelloPowerUp, baseUrl, maxDiscussionDuration\n  }) {\n    this.w = window;\n    this.trello = TrelloPowerUp;\n    this.baseUrl = baseUrl;\n\n    this.boardStorage = new BoardStorage();\n    this.cardStorage = new CardStorage();\n    this.discussion = new Discussion(this.w, this.baseUrl, maxDiscussionDuration);\n    this.voting = new Voting(this.trello);\n    this.updateChecker = new UpdateChecker(this.boardStorage);\n\n    this.elapsedCardBadge = new ElapsedCardBadge(this.discussion);\n    this.elapsedCardDetailBadge = new ElapsedCardDetailBadge(this.discussion);\n    this.votingCardBadge = new VotingCardBadge(this.baseUrl, this.voting);\n    this.votingCardDetailBadge = new VotingCardDetailBadge(this.baseUrl, this.voting);\n  }\n\n  handleBoardButtons = async (t) => {\n    if (!await this.updateChecker.hasBeenUpdated(t)) {\n      return [];\n    }\n\n    return [{\n      icon: {\n        dark: `${this.baseUrl}/assets/moka_white.svg`,\n        light: `${this.baseUrl}/assets/moka.svg`\n      },\n      text: 'Leaner Coffee update!',\n      callback: this.updateChecker.showMenu\n    }];\n  };\n\n  handleCardBackSection = async (t) => {\n    const discussionStatus = await this.discussion.cardStorage.getDiscussionStatus(t);\n    if (discussionStatus === undefined) { return null; }\n\n    return {\n      title: 'Discussion',\n      icon: `${this.baseUrl}/assets/powerup/timer.svg`,\n      content: {\n        type: 'iframe',\n        url: t.signUrl(`${this.baseUrl}/discussion-ui.html`),\n        height: 64\n      }\n    };\n  };\n\n  handleCardBadges = async (t) => {\n    const badges = [\n      await this.elapsedCardBadge.render(t),\n      await this.votingCardBadge.render(t)\n    ];\n\n    return badges.filter(badge => badge);\n  };\n\n  handleCardButtons = async t => [{\n    icon: `${this.baseUrl}/assets/powerup/timer.svg`,\n    text: await this.getButtonLabel(t),\n    callback: this.handleDiscussion\n  }, {\n    icon: `${this.baseUrl}/assets/powerup/heart.svg`,\n    text: `Vote    ${await this.voting.hasCurrentMemberVoted(t) ? '☑' : '☐'}`,\n    callback: this.handleVoting\n  }];\n\n  handleCardDetailBadges = async (t) => {\n    const badges = [\n      await this.elapsedCardDetailBadge.render(t),\n      await this.votingCardDetailBadge.render(t)\n    ];\n\n    return badges.filter(badge => badge);\n  };\n\n  handleListActions = () => [{\n    text: 'Clear All Votes',\n    callback: async (t) => {\n      const result = await t.list('cards');\n      result.cards.forEach(({ id }) => {\n        this.cardStorage.deleteMultipleById(t, [CardStorage.VOTES], id);\n      });\n      t.closePopup();\n    }\n  }];\n\n  handleListSorters = () => [{\n    text: 'Most Votes',\n    callback: async (t, opts) => {\n      const countedCards = await this.trello.Promise.all(opts.cards.map(async (card) => {\n        const leanCoffeeVotes = await this.voting.countVotesByCard(t, card.id);\n        return Object.assign({ leanCoffeeVotes }, card);\n      }));\n\n      const sortedCards = countedCards.sort((cardA, cardB) => {\n        if (cardA.leanCoffeeVotes < cardB.leanCoffeeVotes) { return 1; }\n        if (cardB.leanCoffeeVotes < cardA.leanCoffeeVotes) { return -1; }\n        return 0;\n      });\n\n      return {\n        sortedIds: sortedCards.map(card => card.id)\n      };\n    }\n  }];\n\n  handleEnable = (t) => {\n    this.boardStorage.setPowerUpVersion(t, process.env.VERSION);\n  };\n\n  showSettings = t => t.popup({\n    title: `Leaner Coffee v${process.env.VERSION}`,\n    url: `${this.baseUrl}/settings.html`,\n    height: 184\n  });\n\n  handleVoting = async (t) => {\n    if (!await this.voting.canCurrentMemberVote(t)) {\n      t.popup({\n        title: 'Leaner Coffee',\n        url: `${this.baseUrl}/too_many_votes.html`,\n        args: {\n          maxVotes: await this.voting.getMaxVotes(t)\n        },\n        height: 98\n      });\n\n      return;\n    }\n\n    const votes = await this.voting.getVotes(t) || {};\n    const currentMember = await t.member('id', 'username', 'fullName', 'avatar');\n\n    if (votes[currentMember.id]) {\n      delete votes[currentMember.id];\n    } else {\n      votes[currentMember.id] = {\n        username: currentMember.username,\n        fullName: currentMember.fullName,\n        avatar: currentMember.avatar // currently unused\n      };\n    }\n\n    this.cardStorage.saveVotes(t, votes);\n  };\n\n  handleDiscussion = async (t) => {\n    if (await this.discussion.isOngoingOrPausedForAnotherCard(t)) {\n      const boardStatus = await this.boardStorage.getDiscussionStatus(t);\n      const cardId = await this.boardStorage.getDiscussionCardId(t);\n\n      if (await this.discussion.hasNotBeenArchived(t, cardId)) {\n        const allCards = await t.cards('id', 'name');\n        const cardBeingDiscussed = allCards.find(card => card.id === cardId);\n\n        t.popup({\n          title: 'Leaner Coffee',\n          url: `${this.baseUrl}/ongoing_or_paused.html`,\n          args: {\n            currentCardBeingDiscussed: cardBeingDiscussed.name,\n            currentDiscussionStatus: boardStatus\n          },\n          height: 120\n        });\n\n        return;\n      }\n\n      console.warn(`Card with id ${cardId} not found in current board, most likely archived. Cleaning up.`);\n\n      await this.boardStorage.deleteMultiple(t, [\n        BoardStorage.DISCUSSION_STATUS,\n        BoardStorage.DISCUSSION_CARD_ID,\n        BoardStorage.DISCUSSION_STARTED_AT,\n        BoardStorage.DISCUSSION_PREVIOUS_ELAPSED,\n        BoardStorage.DISCUSSION_INTERVAL_ID\n      ]);\n    }\n\n    let items = [];\n\n    switch (true) {\n      case await this.discussion.isOngoingFor(t):\n        items = [{\n          text: '❙ ❙  Pause timer', // MEDIUM VERTICAL BAR + NARROW NO-BREAK SPACE\n          callback: async (t2) => {\n            this.discussion.pause(t2);\n            t2.closePopup();\n            await this.discussion.cardStorage.saveDiscussionButtonLabel(t2, 'Pausing ❙ ❙');\n          }\n        }, {\n          text: '■ End discussion', // BLACK SQUARE\n          callback: async (t2) => {\n            this.discussion.end(t2);\n            t2.closePopup();\n            await this.discussion.cardStorage.saveDiscussionButtonLabel(t2, 'Stopping ■');\n          }\n        }];\n        break;\n      case await this.discussion.isPausedFor(t):\n        items = [{\n          text: '▶ Resume discussion', // BLACK RIGHT-POINTING TRIANGLE\n          callback: async (t2) => {\n            this.discussion.start(t2);\n            t2.closePopup();\n            await this.discussion.cardStorage.saveDiscussionButtonLabel(t2, 'Resuming ▶');\n          }\n        }, {\n          text: '■ End discussion', // BLACK SQUARE\n          callback: async (t2) => {\n            this.discussion.end(t2);\n            t2.closePopup();\n            await this.discussion.cardStorage.saveDiscussionButtonLabel(t2, 'Stopping ■');\n          }\n        }];\n        break;\n      default:\n        items = [{\n          text: '▶ Start timer', // BLACK RIGHT-POINTING TRIANGLE\n          callback: async (t2) => {\n            this.discussion.start(t2);\n            t2.closePopup();\n            await this.discussion.cardStorage.saveDiscussionButtonLabel(t2, 'Starting ▶');\n          }\n        }];\n    }\n\n    t.popup({\n      title: 'Leaner Coffee',\n      items\n    });\n  };\n\n  getButtonLabel = async (t) => {\n    let label = await this.discussion.cardStorage.getDiscussionButtonLabel(t);\n\n    if (label) {\n      setTimeout(() => {\n        this.discussion.cardStorage.saveDiscussionButtonLabel(t);\n      }, 2000);\n    }\n\n    label = label || 'Discussion';\n\n    return label;\n  };\n\n  start() {\n    this.trello.initialize({\n      'board-buttons': this.handleBoardButtons,\n      'card-back-section': this.handleCardBackSection,\n      'card-badges': this.handleCardBadges,\n      'card-buttons': this.handleCardButtons,\n      'card-detail-badges': this.handleCardDetailBadges,\n      'list-actions': this.handleListActions,\n      'list-sorters': this.handleListSorters,\n      'on-enable': this.handleEnable,\n      'show-settings': this.showSettings\n    });\n  }\n}\n\nexport default LeanCoffeePowerUp;\n","import { StorageScope, StorageVisibility } from '../TrelloConstants';\nimport Storage from './Storage';\n\nclass BoardStorage extends Storage {\n    static DISCUSSION_STATUS = 'leancoffeeDiscussionStatus';\n\n    static DISCUSSION_CARD_ID = 'leancoffeeDiscussionCardId';\n\n    static DISCUSSION_STARTED_AT = 'leancoffeeDiscussionStartedAt';\n\n    static DISCUSSION_PREVIOUS_ELAPSED = 'leancoffeeDiscussionPreviousElapsed';\n\n    static DISCUSSION_INTERVAL_ID = 'leancoffeeDiscussionIntervalId';\n\n    static POWER_UP_VERSION = 'powerUpVersion';\n\n    constructor() {\n      super(StorageScope.BOARD, StorageVisibility.SHARED);\n    }\n\n    getDiscussionStatus(t) {\n      return this.read(t, BoardStorage.DISCUSSION_STATUS);\n    }\n\n    getDiscussionCardId(t) {\n      return this.read(t, BoardStorage.DISCUSSION_CARD_ID);\n    }\n\n    getDiscussionStartedAt(t) {\n      return this.read(t, BoardStorage.DISCUSSION_STARTED_AT);\n    }\n\n    getDiscussionPreviousElapsed(t) {\n      return this.read(t, BoardStorage.DISCUSSION_PREVIOUS_ELAPSED);\n    }\n\n    getDiscussionIntervalId(t) {\n      return this.read(t, BoardStorage.DISCUSSION_INTERVAL_ID);\n    }\n\n    getPowerUpVersion(t) {\n      return this.read(t, BoardStorage.POWER_UP_VERSION);\n    }\n\n    setPowerUpVersion(t, version) {\n      return this.write(t, BoardStorage.POWER_UP_VERSION, version);\n    }\n}\n\nexport default BoardStorage;\n","var parseMs = require('parse-ms')\nvar addZero = require('add-zero')\n\nmodule.exports = function (ms, options) {\n  var leading = options && options.leading\n  var unsignedMs = ms < 0 ? -ms : ms\n  var sign = ms <= -1000 ? '-' : ''\n  var t = parseMs(unsignedMs)\n  var seconds = addZero(t.seconds)\n  if (t.days) return sign + t.days + ':' + addZero(t.hours) + ':' + addZero(t.minutes) + ':' + seconds\n  if (t.hours) return sign + (leading ? addZero(t.hours) : t.hours) + ':' + addZero(t.minutes) + ':' + seconds\n  return sign + (leading ? addZero(t.minutes) : t.minutes) + ':' + seconds\n}\n","import { StorageScope, StorageVisibility } from '../TrelloConstants';\nimport Storage from './Storage';\n\nclass CardStorage extends Storage {\n  static DISCUSSION_STATUS = 'leancoffeeDiscussionStatus';\n\n  static DISCUSSION_ELAPSED = 'leancoffeeDiscussionElapsed';\n\n  static DISCUSSION_THUMBS = 'leancoffeeDiscussionThumbs';\n\n  static VOTES = 'leancoffeeVotes';\n\n  static DISCUSSION_BUTTON_LABEL = 'discussionButtonLabel';\n\n  constructor() {\n    super(StorageScope.CARD, StorageVisibility.SHARED);\n  }\n\n  getDiscussionStatus(t) {\n    return this.read(t, CardStorage.DISCUSSION_STATUS);\n  }\n\n  getDiscussionElapsed(t) {\n    return this.read(t, CardStorage.DISCUSSION_ELAPSED);\n  }\n\n  getDiscussionThumbs(t) {\n    return this.read(t, CardStorage.DISCUSSION_THUMBS);\n  }\n\n  getDiscussionButtonLabel(t) {\n    return this.read(t, CardStorage.DISCUSSION_BUTTON_LABEL);\n  }\n\n  saveDiscussionStatus(t, newStatus) {\n    return this.write(t, CardStorage.DISCUSSION_STATUS, newStatus);\n  }\n\n  saveDiscussionElapsed(t, newElapsed) {\n    return this.write(t, CardStorage.DISCUSSION_ELAPSED, newElapsed);\n  }\n\n  saveDiscussionThumbs(t, newThumbs) {\n    return this.write(t, CardStorage.DISCUSSION_THUMBS, newThumbs);\n  }\n\n  saveVotes(t, newVotes) {\n    return this.write(t, CardStorage.VOTES, newVotes);\n  }\n\n  saveDiscussionButtonLabel(t, newLabel) {\n    return this.write(t, CardStorage.DISCUSSION_BUTTON_LABEL, newLabel);\n  }\n\n  deleteDiscussionThumbs(t) {\n    return this.delete(t, CardStorage.DISCUSSION_THUMBS);\n  }\n}\n\nexport default CardStorage;\n","import { StorageScope, StorageVisibility } from '../TrelloConstants';\n\nclass Storage {\n  constructor(scope = StorageScope.MEMBER, visibility = StorageVisibility.PRIVATE) {\n    Object.assign(this, { scope, visibility });\n  }\n\n  readById(t, key, cardId) {\n    return t.get(cardId, this.visibility, key);\n  }\n\n  read(t, key) {\n    return t.get(this.scope, this.visibility, key);\n  }\n\n  write(t, key, value) {\n    return t.set(this.scope, this.visibility, key, value);\n  }\n\n  writeMultiple(t, entries) {\n    return t.set(this.scope, this.visibility, entries);\n  }\n\n  delete(t, key) {\n    return t.remove(this.scope, this.visibility, key);\n  }\n\n  deleteMultiple(t, entries) {\n    return t.remove(this.scope, this.visibility, entries);\n  }\n\n  deleteMultipleById(t, entries, cardId) {\n    return t.remove(cardId, this.visibility, entries);\n  }\n}\n\nexport default Storage;\n","(function(exports) {\n\n  'use strict';\n\n  function addZero(value, digits) {\n    digits = digits || 2;\n\n    var isNegative = Number(value) < 0;\n    var buffer = value.toString();\n    var size = 0;\n\n    // Strip minus sign if number is negative\n    if(isNegative) {\n      buffer = buffer.slice(1);\n    }\n\n    size = digits - buffer.length + 1;\n    buffer = new Array(size).join('0').concat(buffer);\n\n    // Adds back minus sign if needed\n    return (isNegative ? '-' : '') + buffer;\n  }\n\n  if(typeof define === 'function' && define.amd) {\n    define(function() { return addZero; });\n  } else if(typeof module !== 'undefined' && module.exports) {\n    module.exports = addZero;\n  } else {\n    exports.addZero = addZero;\n  }\n\n})(this);\n","class Notifications {\n  Types = {\n    ELAPSED: {\n      audio: 'assets/looking_down.mp3',\n      text: 'The timer has elapsed'\n    }\n  };\n\n  constructor(window, baseUrl) {\n    this.w = window;\n    this.baseUrl = baseUrl;\n  }\n\n  load(url) {\n    return fetch(url)\n      .then(response => response.arrayBuffer())\n      .then(arrayBuffer => this.audioContext.decodeAudioData(arrayBuffer))\n      .then((audioBuffer) => {\n        const sourceNode = this.audioContext.createBufferSource();\n        sourceNode.buffer = audioBuffer;\n        sourceNode.connect(this.audioContext.destination);\n        return sourceNode;\n      });\n  }\n\n  async play(type) {\n    this.audioContext = this.audioContext || new (this.w.AudioContext || this.w.webkitAudioContext)();\n    const audio = await this.load(`${this.baseUrl}/${type.audio}`);\n    audio.start();\n  }\n\n  open(type, cardName) {\n    // eslint-disable-next-line no-new\n    new this.w.Notification(cardName, {\n      body: type.text,\n      icon: `${this.baseUrl}/assets/timer.png`\n    });\n  }\n\n  show(type, cardName) {\n    if ((!('Notification' in this.w)) || this.w.Notification.permission === 'denied') { return; }\n\n    if (this.w.Notification.permission === 'granted') {\n      this.open(type, cardName);\n    } else {\n      this.w.Notification.requestPermission((permission) => {\n        if (permission === 'granted') {\n          this.open(type, cardName);\n        }\n      });\n    }\n  }\n}\n\nexport default Notifications;\n","import BoardStorage from './storage/BoardStorage';\nimport CardStorage from './storage/CardStorage';\nimport Notifications from './Notifications';\n\nexport const Statuses = {\n  ONGOING: 'ONGOING',\n  PAUSED: 'PAUSED',\n  ENDED: 'ENDED'\n};\n\nexport const Thumbs = {\n  UP: 'UP',\n  DOWN: 'DOWN',\n  MIDDLE: 'MIDDLE'\n};\n\nclass Discussion {\n  constructor(window, baseUrl, maxDiscussionDuration) {\n    this.w = window;\n    this.baseUrl = baseUrl;\n    this.notifications = new Notifications(this.w, this.baseUrl);\n    this.maxDiscussionDuration = maxDiscussionDuration;\n    this.boardStorage = new BoardStorage();\n    this.cardStorage = new CardStorage();\n  }\n\n  isOngoingOrPausedForAnotherCard = async (t) => {\n    const boardStatus = await this.boardStorage.getDiscussionStatus(t);\n    const cardId = await this.boardStorage.getDiscussionCardId(t);\n\n    return [Statuses.ONGOING, Statuses.PAUSED].includes(boardStatus) && cardId !== t.getContext().card;\n  };\n\n  hasNotBeenArchived = async (t, cardId) => {\n    const allCards = await t.cards('id', 'name');\n    return !!allCards.find(card => card.id === cardId);\n  };\n\n  isOngoingFor = async (t) => {\n    const cardStatus = await this.cardStorage.getDiscussionStatus(t);\n    return Statuses.ONGOING === cardStatus;\n  };\n\n  isPausedFor = async (t) => {\n    const cardStatus = await this.cardStorage.getDiscussionStatus(t);\n    return Statuses.PAUSED === cardStatus;\n  };\n\n  getElapsed = t => this.cardStorage.getDiscussionElapsed(t);\n\n  updateElapsed = async (t) => {\n    const startedAt = await this.boardStorage.getDiscussionStartedAt(t);\n    const elapsed = Date.now() - startedAt;\n\n    if (elapsed > this.maxDiscussionDuration) {\n      clearInterval(await this.boardStorage.getDiscussionIntervalId(t));\n      this.pause(t, true);\n    } else {\n      this.saveElapsed(t);\n    }\n  };\n\n  saveElapsed = async (t) => {\n    const startedAt = await this.boardStorage.getDiscussionStartedAt(t);\n    const previousElapsed = await this.boardStorage.getDiscussionPreviousElapsed(t) || 0;\n    const elapsed = startedAt ? Date.now() - startedAt : 0;\n\n    this.cardStorage.saveDiscussionElapsed(t, (elapsed + previousElapsed));\n  };\n\n  start = async (t) => {\n    this.boardStorage.writeMultiple(t, {\n      [BoardStorage.DISCUSSION_STATUS]: Statuses.ONGOING,\n      [BoardStorage.DISCUSSION_CARD_ID]: t.getContext().card,\n      [BoardStorage.DISCUSSION_STARTED_AT]: Date.now(),\n      [BoardStorage.DISCUSSION_PREVIOUS_ELAPSED]: await this.getElapsed(t),\n      [BoardStorage.DISCUSSION_INTERVAL_ID]: setInterval(this.updateElapsed, 5000, t)\n    });\n\n    await this.cardStorage.saveDiscussionStatus(t, Statuses.ONGOING);\n    await this.cardStorage.deleteDiscussionThumbs(t);\n  };\n\n  pause = async (t, notify = false) => {\n    const intervalId = await this.boardStorage.getDiscussionIntervalId(t);\n    const cardId = await this.boardStorage.getDiscussionCardId(t);\n    const cardName = (await t.cards('id', 'name')).find(card => card.id === cardId).name;\n\n    clearInterval(intervalId);\n\n    this.cardStorage.saveDiscussionStatus(t, Statuses.PAUSED);\n    this.saveElapsed(t);\n    this.boardStorage.writeMultiple(t, {\n      [BoardStorage.DISCUSSION_STATUS]: Statuses.PAUSED,\n      [BoardStorage.DISCUSSION_STARTED_AT]: null,\n      [BoardStorage.DISCUSSION_PREVIOUS_ELAPSED]: await this.getElapsed(t),\n      [BoardStorage.DISCUSSION_INTERVAL_ID]: null\n    });\n\n    if (notify) {\n      this.notifications.play(this.notifications.Types.ELAPSED);\n      this.notifications.show(this.notifications.Types.ELAPSED, cardName);\n    }\n  };\n\n  end = async (t) => {\n    const intervalId = await this.boardStorage.getDiscussionIntervalId(t);\n    clearInterval(intervalId);\n\n    try {\n      await this.cardStorage.saveDiscussionStatus(t, Statuses.ENDED);\n      await this.saveElapsed(t);\n      await this.cardStorage.deleteMultiple(t, [CardStorage.DISCUSSION_THUMBS]);\n      await this.boardStorage.deleteMultiple(t, [\n        BoardStorage.DISCUSSION_STATUS,\n        BoardStorage.DISCUSSION_CARD_ID,\n        BoardStorage.DISCUSSION_STARTED_AT,\n        BoardStorage.DISCUSSION_PREVIOUS_ELAPSED,\n        BoardStorage.DISCUSSION_INTERVAL_ID\n      ]);\n    } catch (err) {\n      throw new Error(err);\n    }\n  };\n}\n\nexport default Discussion;\n"],"sourceRoot":""}