{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/TrelloConstants.js","webpack:///./node_modules/parse-ms/index.js","webpack:///./src/badges/ElapsedCardBadge.js","webpack:///./src/badges/ElapsedCardDetailBadge.js","webpack:///./src/badges/VotingCardBadge.js","webpack:///./src/badges/VotingCardDetailBadge.js","webpack:///./src/Voting.js","webpack:///./src/index.js","webpack:///./src/LeanCoffeePowerUp.js","webpack:///./src/storage/BoardStorage.js","webpack:///./node_modules/format-duration/index.js","webpack:///./src/storage/CardStorage.js","webpack:///./src/storage/Storage.js","webpack:///./node_modules/add-zero/index.js","webpack:///./src/Notifications.js","webpack:///./src/Discussion.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","StorageScope","StorageVisibility","BadgeColors","BOARD","CARD","MEMBER","ORGANIZATION","SHARED","PRIVATE","BLUE","GREEN","ORANGE","RED","YELLOW","PURPLE","PINK","SKY","LIME","LIGHTGRAY","ms","TypeError","roundTowardZero","Math","floor","ceil","days","hours","minutes","seconds","milliseconds","ElapsedCardBadge","discussion","_this","this","_classCallCheck","_defineProperty","_ref","_asyncToGenerator","elapsed","formatDuration","_x","_x2","apply","arguments","_ref2","isOngoingFor","isPausedFor","_x3","render","EMPTY_TITLE","getElapsed","title","getTitle","text","getText","color","getColor","ElapsedCardDetailBadge","cardStorage","getDiscussionStatus","Statuses","ENDED","_get","_getPrototypeOf","_assertThisInitialized","VotingCardBadge","baseUrl","voting","VotingCardBadge_classCallCheck","VotingCardBadge_asyncToGenerator","votes","getVotes","values","reduce","knownVoters","vote","username","push","concat","fullName","voters","getVoters","length","hasVoted","hasCurrentMemberVoted","icon","VotingCardDetailBadge","items","popup","commonData","VotingCardDetailBadge_get","VotingCardDetailBadge_getPrototypeOf","VotingCardDetailBadge_assertThisInitialized","callback","showVoters","Voting","trello","Voting_classCallCheck","Voting_defineProperty","Voting_asyncToGenerator","read","CardStorage","VOTES","getContext","member","_ref3","cardId","readById","keys","filter","_x4","_ref4","currentList","list","cards","_x5","_ref5","cardIds","map","card","id","countVotesByMember","getMaxVotes","_x6","_ref6","promise","all","_ref7","_x9","total","_x7","_x8","Promise","process","hostname","port","LeanCoffeePowerUp","window","TrelloPowerUp","maxDiscussionDuration","LeanCoffeePowerUp_classCallCheck","LeanCoffeePowerUp_defineProperty","LeanCoffeePowerUp_asyncToGenerator","handleDiscussion","handleVoting","elapsedCardBadge","votingCardBadge","badge","elapsedCardDetailBadge","votingCardDetailBadge","content","type","url","signUrl","height","_callback","opts","sortedIds","leanCoffeeVotes","countVotesByCard","assign","sort","cardA","cardB","canCurrentMemberVote","currentMember","avatar","saveVotes","args","maxVotes","_ref8","isOngoingOrPausedForAnotherCard","boardStatus","boardStorage","getDiscussionCardId","cardName","find","currentCardBeingDiscussed","currentDiscussionStatus","t2","pause","closePopup","end","start","w","BoardStorage","Discussion","initialize","card-buttons","handleCardButtons","card-badges","handleCardBadges","card-detail-badges","handleCardDetailBadges","card-back-section","handleCardBackSection","list-sorters","handleListSorters","show-settings","showSettings","_possibleConstructorReturn","Storage","DISCUSSION_STATUS","DISCUSSION_CARD_ID","DISCUSSION_STARTED_AT","DISCUSSION_PREVIOUS_ELAPSED","DISCUSSION_INTERVAL_ID","parseMs","addZero","unsignedMs","sign","DISCUSSION_ELAPSED","DISCUSSION_THUMBS","newStatus","write","newElapsed","newThumbs","newVotes","delete","scope","undefined","visibility","set","entries","remove","__WEBPACK_AMD_DEFINE_RESULT__","digits","size","isNegative","Number","buffer","toString","slice","Array","join","Notifications","ELAPSED","audio","audioContext","AudioContext","webkitAudioContext","fetch","then","response","arrayBuffer","decodeAudioData","audioBuffer","sourceNode","createBufferSource","connect","destination","load","Notification","body","_this2","permission","open","requestPermission","ONGOING","PAUSED","Thumbs","UP","DOWN","MIDDLE","Discussion_classCallCheck","Discussion_defineProperty","Discussion_asyncToGenerator","includes","cardStatus","getDiscussionElapsed","startedAt","getDiscussionStartedAt","Date","now","saveElapsed","previousElapsed","getDiscussionPreviousElapsed","saveDiscussionElapsed","_this$boardStorage$wr","writeMultiple","setInterval","updateElapsed","saveDiscussionStatus","deleteDiscussionThumbs","_this$boardStorage$wr2","notify","intervalId","getDiscussionIntervalId","clearInterval","notifications","play","Types","show","deleteMultiple","err","Error"],"mappings":"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","file":"main.4481f790b9e11f4898b9.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"3177845424933048caec\");\n","export const VisibilityConditions = {\n  IS_ADMIN: 'admin',\n  CAN_EDIT: 'edit',\n  READ_ONLY: 'readOnly',\n  SIGNED_IN: 'signedIn',\n  SIGNED_OUT: 'signedOut',\n  ALWAYS: 'always'\n};\n\nexport const StorageScope = {\n  BOARD: 'board',\n  CARD: 'card',\n  MEMBER: 'member',\n  ORGANIZATION: 'organization'\n};\n\nexport const StorageVisibility = {\n  SHARED: 'shared',\n  PRIVATE: 'private'\n};\n\nexport const BadgeColors = {\n  BLUE: 'blue',\n  GREEN: 'green',\n  ORANGE: 'orange',\n  RED: 'red',\n  YELLOW: 'yellow',\n  PURPLE: 'purple',\n  PINK: 'pink',\n  SKY: 'sky',\n  LIME: 'lime',\n  LIGHTGRAY: 'light-gray'\n};\n","'use strict';\nmodule.exports = function (ms) {\n\tif (typeof ms !== 'number') {\n\t\tthrow new TypeError('Expected a number');\n\t}\n\n\tvar roundTowardZero = ms > 0 ? Math.floor : Math.ceil;\n\n\treturn {\n\t\tdays: roundTowardZero(ms / 86400000),\n\t\thours: roundTowardZero(ms / 3600000) % 24,\n\t\tminutes: roundTowardZero(ms / 60000) % 60,\n\t\tseconds: roundTowardZero(ms / 1000) % 60,\n\t\tmilliseconds: roundTowardZero(ms) % 1000\n\t};\n};\n","import formatDuration from 'format-duration';\n\nimport { BadgeColors } from '../TrelloConstants';\n\n\nclass ElapsedCardBadge {\n  EMPTY_TITLE = '';\n\n  constructor(discussion) {\n    this.discussion = discussion;\n    this.render = this.render.bind(this);\n  }\n\n  getTitle() {\n    return this.EMPTY_TITLE;\n  }\n\n  getText = async (t, elapsed) => formatDuration(elapsed);\n\n  getColor = async (t) => {\n    const isOngoing = await this.discussion.isOngoingFor(t);\n\n    if (isOngoing) { return BadgeColors.ORANGE; }\n\n    return await this.discussion.isPausedFor(t) ? BadgeColors.YELLOW : BadgeColors.LIGHTGRAY;\n  };\n\n\n  // Unable to use class properties here because I need to call\n  // it from a subclass, and it's currently broken - see:\n  // https://github.com/babel/babel/issues/5104\n  //\n  // Upgrading to Babel 7.x should solve it.\n  async render(t) {\n    const elapsed = await this.discussion.getElapsed(t);\n    if (!elapsed) { return null; }\n\n    return {\n      title: this.getTitle(t),\n      text: await this.getText(t, elapsed),\n      color: await this.getColor(t)\n    };\n  }\n}\n\nexport default ElapsedCardBadge;\n","import { Statuses } from '../Discussion';\nimport ElapsedCardBadge from './ElapsedCardBadge';\n\n\nclass ElapsedCardDetailBadge extends ElapsedCardBadge {\n  getTitle = () => 'Discussion time';\n\n  render = async (t) => {\n    const discussionStatus = await this.discussion.cardStorage.getDiscussionStatus(t);\n    if (discussionStatus !== Statuses.ENDED) { return null; }\n\n    return super.render(t);\n  };\n}\n\nexport default ElapsedCardDetailBadge;\n","class VotingCardBadge {\n  constructor(baseUrl, voting) {\n    this.baseUrl = baseUrl;\n    this.voting = voting;\n    this.render = this.render.bind(this);\n  }\n\n  getVoters = async (t) => {\n    const votes = await this.voting.getVotes(t) || {};\n\n    return Object.values(votes).reduce((knownVoters, vote) => {\n      if (vote.username) {\n        knownVoters.push({ text: `${vote.username} (${vote.fullName})` });\n      }\n\n      return knownVoters;\n    }, []);\n  };\n\n  // Unable to use class properties here because I need to call\n  // it from a subclass, and it's currently broken - see:\n  // https://github.com/babel/babel/issues/5104\n  //\n  // Upgrading to Babel 7.x should solve it.\n  async render(t) {\n    const voters = await this.getVoters(t);\n    if (!voters.length) { return null; }\n\n    const hasVoted = await this.voting.hasCurrentMemberVoted(t);\n\n    return {\n      text: voters.length,\n      color: hasVoted ? 'blue' : null,\n      icon: `${this.baseUrl}/assets/powerup/${hasVoted ? 'heart_white.svg' : 'heart.svg'}`,\n    };\n  }\n}\n\nexport default VotingCardBadge;\n","import VotingCardBadge from './VotingCardBadge';\n\nclass VotingCardDetailBadge extends VotingCardBadge {\n  showVoters = async (t) => {\n    const items = await this.getVoters(t);\n\n    if (!items.length) { return; }\n\n    t.popup({\n      title: 'Voters',\n      items\n    });\n  };\n\n  render = async (t) => {\n    const commonData = await super.render(t);\n\n    if (commonData) {\n      commonData.title = 'Voters';\n      delete commonData.icon;\n      commonData.callback = this.showVoters;\n    }\n\n    return commonData;\n  };\n}\n\nexport default VotingCardDetailBadge;\n","import CardStorage from './storage/CardStorage';\n\nclass Voting {\n  constructor(trello) {\n    this.cardStorage = new CardStorage();\n    this.promise = trello.Promise;\n  }\n\n  hasCurrentMemberVoted = async (t) => {\n    const votes = await this.cardStorage.read(t, CardStorage.VOTES);\n    if (!votes) { return false; }\n\n    const currentMember = t.getContext().member;\n    return !!votes[currentMember];\n  };\n\n  getVotes = async t => this.cardStorage.read(t, CardStorage.VOTES);\n\n  countVotesByCard = async (t, cardId) => {\n    const votes = await this.cardStorage.readById(t, CardStorage.VOTES, cardId);\n\n    if (!votes) { return 0; }\n\n    return Object.keys(votes).filter(key => votes[key]).length;\n  };\n\n  getMaxVotes = async (t) => {\n    const currentList = await t.list('cards');\n\n    // http://www.leanmath.com/blog-entry/multi-voting-math-or-n3\n    return Math.ceil(currentList.cards.length / 3);\n  };\n\n  canCurrentMemberVote = async (t) => {\n    if (await this.hasCurrentMemberVoted(t)) { return true; }\n\n    const currentList = await t.list('cards');\n    const cardIds = currentList.cards.map(card => card.id);\n    const currentMemberVotes = await this.countVotesByMember(t, cardIds);\n    const maxVotes = await this.getMaxVotes(t);\n\n    return currentMemberVotes < maxVotes;\n  };\n\n  countVotesByMember = async (t, cardIds) => {\n    const listVotes = await this.promise.all(cardIds.map(async (cardId) => {\n      const votes = await this.cardStorage.readById(t, CardStorage.VOTES, cardId);\n      if (!votes) { return 0; }\n\n      const currentMember = t.getContext().member;\n      return !!votes[currentMember];\n    }));\n\n    return listVotes.reduce((total, vote) => total + vote, 0);\n  };\n}\n\nexport default Voting;\n","import LeanCoffeePowerUp from './LeanCoffeePowerUp';\n\nconst { hostname, port } = process.env.CONFIG[process.env.NODE_ENV];\nconst DEFAULT_DISCUSSION_DURATION = 5 * 60 * 1000;\n\n/* eslint-disable prefer-template */\nconst instance = new LeanCoffeePowerUp({\n  window,\n  TrelloPowerUp: window.TrelloPowerUp,\n  baseUrl: `${hostname}${port ? ':' + port : ''}`,\n  maxDiscussionDuration: DEFAULT_DISCUSSION_DURATION\n});\n\ninstance.start();\n","import BoardStorage from './storage/BoardStorage';\nimport CardStorage from './storage/CardStorage';\nimport ElapsedCardBadge from './badges/ElapsedCardBadge';\nimport ElapsedCardDetailBadge from './badges/ElapsedCardDetailBadge';\nimport VotingCardBadge from './badges/VotingCardBadge';\nimport VotingCardDetailBadge from './badges/VotingCardDetailBadge';\nimport Discussion from './Discussion';\nimport Voting from './Voting';\n\n\nclass LeanCoffeePowerUp {\n  constructor({\n    window, TrelloPowerUp, baseUrl, maxDiscussionDuration\n  }) {\n    this.w = window;\n    this.trello = TrelloPowerUp;\n    this.baseUrl = baseUrl;\n\n    this.boardStorage = new BoardStorage();\n    this.cardStorage = new CardStorage();\n    this.discussion = new Discussion(this.w, this.baseUrl, maxDiscussionDuration);\n    this.voting = new Voting(this.trello);\n\n    this.elapsedCardBadge = new ElapsedCardBadge(this.discussion);\n    this.elapsedCardDetailBadge = new ElapsedCardDetailBadge(this.discussion);\n    this.votingCardBadge = new VotingCardBadge(this.baseUrl, this.voting);\n    this.votingCardDetailBadge = new VotingCardDetailBadge(this.baseUrl, this.voting);\n  }\n\n  handleCardButtons = async t => [{\n    icon: `${this.baseUrl}/assets/powerup/timer.svg`,\n    text: 'Discussion',\n    callback: this.handleDiscussion\n  }, {\n    icon: `${this.baseUrl}/assets/powerup/heart.svg`,\n    text: `Vote    ${await this.voting.hasCurrentMemberVoted(t) ? '☑' : '☐'}`,\n    callback: this.handleVoting\n  }];\n\n  handleCardBadges = async (t) => {\n    const badges = [\n      await this.elapsedCardBadge.render(t),\n      await this.votingCardBadge.render(t)\n    ];\n\n    return badges.filter(badge => badge);\n  };\n\n  handleCardDetailBadges = async (t) => {\n    const badges = [\n      await this.elapsedCardDetailBadge.render(t),\n      await this.votingCardDetailBadge.render(t)\n    ];\n\n    return badges.filter(badge => badge);\n  };\n\n  handleCardBackSection = async t => ({\n    title: 'Discussion',\n    icon: `${this.baseUrl}/assets/powerup/timer.svg`,\n    content: {\n      type: 'iframe',\n      url: t.signUrl(`${this.baseUrl}/discussion-ui.html`),\n      height: 120\n    }\n  });\n\n  handleListSorters = () => [{\n    text: 'Most Votes',\n    callback: async (t, opts) => {\n      const countedCards = await this.trello.Promise.all(opts.cards.map(async (card) => {\n        const leanCoffeeVotes = await this.voting.countVotesByCard(t, card.id);\n        return Object.assign({ leanCoffeeVotes }, card);\n      }));\n\n      const sortedCards = countedCards.sort((cardA, cardB) => {\n        if (cardA.leanCoffeeVotes < cardB.leanCoffeeVotes) { return 1; }\n        if (cardB.leanCoffeeVotes < cardA.leanCoffeeVotes) { return -1; }\n        return 0;\n      });\n\n      return {\n        sortedIds: sortedCards.map(card => card.id)\n      };\n    }\n  }];\n\n  showSettings = t => t.popup({\n    title: `Leaner Coffee v${process.env.VERSION}`,\n    url: `${this.baseUrl}/settings.html`,\n    height: 184\n  });\n\n  start() {\n    this.trello.initialize({\n      'card-buttons': this.handleCardButtons,\n      'card-badges': this.handleCardBadges,\n      'card-detail-badges': this.handleCardDetailBadges,\n      'card-back-section': this.handleCardBackSection,\n      'list-sorters': this.handleListSorters,\n      'show-settings': this.showSettings\n    });\n  }\n\n  handleVoting = async (t) => {\n    if (!await this.voting.canCurrentMemberVote(t)) {\n      t.popup({\n        title: 'Lean Coffee',\n        url: `${this.baseUrl}/too_many_votes.html`,\n        args: {\n          maxVotes: await this.voting.getMaxVotes(t)\n        },\n        height: 98\n      });\n\n      return;\n    }\n\n    const votes = await this.voting.getVotes(t) || {};\n    const currentMember = await t.member('id', 'username', 'fullName', 'avatar');\n\n    if (votes[currentMember.id]) {\n      delete votes[currentMember.id];\n    } else {\n      votes[currentMember.id] = {\n        username: currentMember.username,\n        fullName: currentMember.fullName,\n        avatar: currentMember.avatar // currently unused\n      };\n    }\n\n    this.cardStorage.saveVotes(t, votes);\n  };\n\n  handleDiscussion = async (t) => {\n    if (await this.discussion.isOngoingOrPausedForAnotherCard(t)) {\n      const boardStatus = await this.boardStorage.getDiscussionStatus(t);\n      const cardId = await this.boardStorage.getDiscussionCardId(t);\n      const cardName = (await t.cards('id', 'name')).find(card => card.id === cardId).name;\n\n      t.popup({\n        title: 'Lean Coffee',\n        url: `${this.baseUrl}/ongoing_or_paused.html`,\n        args: {\n          currentCardBeingDiscussed: cardName,\n          currentDiscussionStatus: boardStatus\n        },\n        height: 120\n      });\n    } else {\n      let items = [];\n\n      switch (true) {\n        case await this.discussion.isOngoingFor(t):\n          items = [{\n            text: 'Pause timer',\n            callback: (t2) => {\n              this.discussion.pause(t2);\n              t2.closePopup();\n            }\n          }, {\n            text: 'End discussion',\n            callback: (t2) => {\n              this.discussion.end(t2);\n              t2.closePopup();\n            }\n          }];\n          break;\n        case await this.discussion.isPausedFor(t):\n          items = [{\n            text: 'Restart timer',\n            callback: (t2) => {\n              this.discussion.start(t2);\n              t2.closePopup();\n            }\n          }, {\n            text: 'End discussion',\n            callback: (t2) => {\n              this.discussion.end(t2);\n              t2.closePopup();\n            }\n          }];\n          break;\n        default:\n          items = [{\n            text: 'Start timer',\n            callback: (t2) => {\n              this.discussion.start(t2);\n              t2.closePopup();\n            }\n          }];\n      }\n\n      t.popup({\n        title: 'Lean Coffee',\n        items\n      });\n    }\n  };\n}\n\nexport default LeanCoffeePowerUp;\n","import { StorageScope, StorageVisibility } from '../TrelloConstants';\nimport Storage from './Storage';\n\nclass BoardStorage extends Storage {\n    static DISCUSSION_STATUS = 'leancoffeeDiscussionStatus';\n\n    static DISCUSSION_CARD_ID = 'leancoffeeDiscussionCardId';\n\n    static DISCUSSION_STARTED_AT = 'leancoffeeDiscussionStartedAt';\n\n    static DISCUSSION_PREVIOUS_ELAPSED = 'leancoffeeDiscussionPreviousElapsed';\n\n    static DISCUSSION_INTERVAL_ID = 'leancoffeeDiscussionIntervalId';\n\n    constructor() {\n      super(StorageScope.BOARD, StorageVisibility.SHARED);\n    }\n\n    getDiscussionStatus(t) {\n      return this.read(t, BoardStorage.DISCUSSION_STATUS);\n    }\n\n    getDiscussionCardId(t) {\n      return this.read(t, BoardStorage.DISCUSSION_CARD_ID);\n    }\n\n    getDiscussionStartedAt(t) {\n      return this.read(t, BoardStorage.DISCUSSION_STARTED_AT);\n    }\n\n    getDiscussionPreviousElapsed(t) {\n      return this.read(t, BoardStorage.DISCUSSION_PREVIOUS_ELAPSED);\n    }\n\n    getDiscussionIntervalId(t) {\n      return this.read(t, BoardStorage.DISCUSSION_INTERVAL_ID);\n    }\n}\n\nexport default BoardStorage;\n","const parseMs = require('parse-ms')\nconst addZero = require('add-zero')\n\nmodule.exports = (ms) => {\n  const unsignedMs = ms < 0 ? -ms : ms\n  const sign = ms <= -1000 ? '-' : ''\n  let { days, hours, minutes, seconds } = parseMs(unsignedMs)\n  seconds = addZero(seconds)\n  if (days) return `${sign}${days}:${addZero(hours)}:${addZero(minutes)}:${seconds}`\n  if (hours) return `${sign}${hours}:${addZero(minutes)}:${seconds}`\n  return `${sign}${minutes}:${seconds}`\n}\n","import { StorageScope, StorageVisibility } from '../TrelloConstants';\nimport Storage from './Storage';\n\nclass CardStorage extends Storage {\n  static DISCUSSION_STATUS = 'leancoffeeDiscussionStatus';\n\n  static DISCUSSION_ELAPSED = 'leancoffeeDiscussionElapsed';\n\n  static DISCUSSION_THUMBS = 'leancoffeeDiscussionThumbs';\n\n  static VOTES = 'leancoffeeVotes';\n\n  constructor() {\n    super(StorageScope.CARD, StorageVisibility.SHARED);\n  }\n\n  getDiscussionStatus(t) {\n    return this.read(t, CardStorage.DISCUSSION_STATUS);\n  }\n\n  getDiscussionElapsed(t) {\n    return this.read(t, CardStorage.DISCUSSION_ELAPSED);\n  }\n\n  getDiscussionThumbs(t) {\n    return this.read(t, CardStorage.DISCUSSION_THUMBS);\n  }\n\n  saveDiscussionStatus(t, newStatus) {\n    return this.write(t, CardStorage.DISCUSSION_STATUS, newStatus);\n  }\n\n  saveDiscussionElapsed(t, newElapsed) {\n    return this.write(t, CardStorage.DISCUSSION_ELAPSED, newElapsed);\n  }\n\n  saveDiscussionThumbs(t, newThumbs) {\n    return this.write(t, CardStorage.DISCUSSION_THUMBS, newThumbs);\n  }\n\n  saveVotes(t, newVotes) {\n    return this.write(t, CardStorage.VOTES, newVotes);\n  }\n\n  deleteDiscussionThumbs(t) {\n    return this.delete(t, CardStorage.DISCUSSION_THUMBS);\n  }\n}\n\nexport default CardStorage;\n","import { StorageScope, StorageVisibility } from '../TrelloConstants';\n\nclass Storage {\n  constructor(scope = StorageScope.MEMBER, visibility = StorageVisibility.PRIVATE) {\n    Object.assign(this, { scope, visibility });\n  }\n\n  readById(t, key, cardId) {\n    return t.get(cardId, this.visibility, key);\n  }\n\n  read(t, key) {\n    return t.get(this.scope, this.visibility, key);\n  }\n\n  write(t, key, value) {\n    return t.set(this.scope, this.visibility, key, value);\n  }\n\n  writeMultiple(t, entries) {\n    return t.set(this.scope, this.visibility, entries);\n  }\n\n  delete(t, key) {\n    return t.remove(this.scope, this.visibility, key);\n  }\n\n  deleteMultiple(t, entries) {\n    return t.remove(this.scope, this.visibility, entries);\n  }\n\n  deleteMultipleById(t, entries, cardId) {\n    return t.remove(cardId, this.visibility, entries);\n  }\n}\n\nexport default Storage;\n","(function(exports) {\n\n  'use strict';\n\n  function addZero(value, digits) {\n    digits = digits || 2;\n\n    var isNegative = Number(value) < 0;\n    var buffer = value.toString();\n    var size = 0;\n\n    // Strip minus sign if number is negative\n    if(isNegative) {\n      buffer = buffer.slice(1);\n    }\n\n    size = digits - buffer.length + 1;\n    buffer = new Array(size).join('0').concat(buffer);\n\n    // Adds back minus sign if needed\n    return (isNegative ? '-' : '') + buffer;\n  }\n\n  if(typeof define === 'function' && define.amd) {\n    define(function() { return addZero; });\n  } else if(typeof module !== 'undefined' && module.exports) {\n    module.exports = addZero;\n  } else {\n    exports.addZero = addZero;\n  }\n\n})(this);\n","class Notifications {\n  Types = {\n    ELAPSED: {\n      audio: 'assets/looking_down.mp3',\n      text: 'The timer has elapsed'\n    }\n  };\n\n  constructor(window, baseUrl) {\n    this.w = window;\n    this.baseUrl = baseUrl;\n    this.audioContext = new (this.w.AudioContext || this.w.webkitAudioContext)();\n  }\n\n  load(url) {\n    return fetch(url)\n      .then(response => response.arrayBuffer())\n      .then(arrayBuffer => this.audioContext.decodeAudioData(arrayBuffer))\n      .then((audioBuffer) => {\n        const sourceNode = this.audioContext.createBufferSource();\n        sourceNode.buffer = audioBuffer;\n        sourceNode.connect(this.audioContext.destination);\n        return sourceNode;\n      });\n  }\n\n  async play(type) {\n    const audio = await this.load(`${this.baseUrl}/${type.audio}`);\n    audio.start();\n  }\n\n  open(type, cardName) {\n    // eslint-disable-next-line no-new\n    new this.w.Notification(cardName, {\n      body: type.text,\n      icon: `${this.baseUrl}/assets/timer.png`\n    });\n  }\n\n  show(type, cardName) {\n    if ((!('Notification' in this.w)) || this.w.Notification.permission === 'denied') { return; }\n\n    if (this.w.Notification.permission === 'granted') {\n      this.open(type, cardName);\n    } else {\n      this.w.Notification.requestPermission((permission) => {\n        if (permission === 'granted') {\n          this.open(type, cardName);\n        }\n      });\n    }\n  }\n}\n\nexport default Notifications;\n","import BoardStorage from './storage/BoardStorage';\nimport CardStorage from './storage/CardStorage';\nimport Notifications from './Notifications';\n\nexport const Statuses = {\n  ONGOING: 'ONGOING',\n  PAUSED: 'PAUSED',\n  ENDED: 'ENDED'\n};\n\nexport const Thumbs = {\n  UP: 'UP',\n  DOWN: 'DOWN',\n  MIDDLE: 'MIDDLE'\n};\n\nclass Discussion {\n  constructor(window, baseUrl, maxDiscussionDuration) {\n    this.w = window;\n    this.baseUrl = baseUrl;\n    this.notifications = new Notifications(this.w, this.baseUrl);\n    this.maxDiscussionDuration = maxDiscussionDuration;\n    this.boardStorage = new BoardStorage();\n    this.cardStorage = new CardStorage();\n  }\n\n  isOngoingOrPausedForAnotherCard = async (t) => {\n    const boardStatus = await this.boardStorage.getDiscussionStatus(t);\n    const cardId = await this.boardStorage.getDiscussionCardId(t);\n\n    return [Statuses.ONGOING, Statuses.PAUSED].includes(boardStatus) && cardId !== t.getContext().card;\n  };\n\n  isOngoingFor = async (t) => {\n    const cardStatus = await this.cardStorage.getDiscussionStatus(t);\n    return Statuses.ONGOING === cardStatus;\n  };\n\n  isPausedFor = async (t) => {\n    const cardStatus = await this.cardStorage.getDiscussionStatus(t);\n    return Statuses.PAUSED === cardStatus;\n  };\n\n  getElapsed = t => this.cardStorage.getDiscussionElapsed(t);\n\n  updateElapsed = async (t) => {\n    const startedAt = await this.boardStorage.getDiscussionStartedAt(t);\n    const elapsed = Date.now() - startedAt;\n\n    if (elapsed > this.maxDiscussionDuration) {\n      this.pause(t, true);\n    } else {\n      this.saveElapsed(t);\n    }\n  };\n\n  saveElapsed = async (t) => {\n    const startedAt = await this.boardStorage.getDiscussionStartedAt(t);\n    const previousElapsed = await this.boardStorage.getDiscussionPreviousElapsed(t) || 0;\n    const elapsed = startedAt ? Date.now() - startedAt : 0;\n\n    this.cardStorage.saveDiscussionElapsed(t, (elapsed + previousElapsed));\n  };\n\n  start = async (t) => {\n    this.boardStorage.writeMultiple(t, {\n      [BoardStorage.DISCUSSION_STATUS]: Statuses.ONGOING,\n      [BoardStorage.DISCUSSION_CARD_ID]: t.getContext().card,\n      [BoardStorage.DISCUSSION_STARTED_AT]: Date.now(),\n      [BoardStorage.DISCUSSION_PREVIOUS_ELAPSED]: await this.getElapsed(t),\n      [BoardStorage.DISCUSSION_INTERVAL_ID]: setInterval(this.updateElapsed, 5000, t)\n    });\n\n    await this.cardStorage.saveDiscussionStatus(t, Statuses.ONGOING);\n    await this.cardStorage.deleteDiscussionThumbs(t);\n  };\n\n  pause = async (t, notify = false) => {\n    const intervalId = await this.boardStorage.getDiscussionIntervalId(t);\n    const cardId = await this.boardStorage.getDiscussionCardId(t);\n    const cardName = (await t.cards('id', 'name')).find(card => card.id === cardId).name;\n\n    clearInterval(intervalId);\n\n    this.cardStorage.saveDiscussionStatus(t, Statuses.PAUSED);\n    this.saveElapsed(t);\n    this.boardStorage.writeMultiple(t, {\n      [BoardStorage.DISCUSSION_STATUS]: Statuses.PAUSED,\n      [BoardStorage.DISCUSSION_STARTED_AT]: null,\n      [BoardStorage.DISCUSSION_PREVIOUS_ELAPSED]: await this.getElapsed(t),\n      [BoardStorage.DISCUSSION_INTERVAL_ID]: null\n    });\n\n    if (notify) {\n      this.notifications.play(this.notifications.Types.ELAPSED);\n      this.notifications.show(this.notifications.Types.ELAPSED, cardName);\n    }\n  };\n\n  end = async (t) => {\n    const intervalId = await this.boardStorage.getDiscussionIntervalId(t);\n    clearInterval(intervalId);\n\n    try {\n      await this.cardStorage.saveDiscussionStatus(t, Statuses.ENDED);\n      await this.saveElapsed(t);\n      await this.cardStorage.deleteMultiple(t, [CardStorage.DISCUSSION_THUMBS]);\n      await this.boardStorage.deleteMultiple(t, [\n        BoardStorage.DISCUSSION_STATUS,\n        BoardStorage.DISCUSSION_CARD_ID,\n        BoardStorage.DISCUSSION_STARTED_AT,\n        BoardStorage.DISCUSSION_PREVIOUS_ELAPSED,\n        BoardStorage.DISCUSSION_INTERVAL_ID\n      ]);\n    } catch (err) {\n      throw new Error(err);\n    }\n  };\n}\n\nexport default Discussion;\n"],"sourceRoot":""}