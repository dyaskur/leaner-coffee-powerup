{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/TrelloConstants.js","webpack:///./node_modules/parse-ms/index.js","webpack:///./src/storage/BoardStorage.js","webpack:///./node_modules/format-duration/index.js","webpack:///./src/LeanCoffeeDiscussionUI.js","webpack:///./src/discussion-ui.js","webpack:///./src/storage/CardStorage.js","webpack:///./src/storage/Storage.js","webpack:///./node_modules/add-zero/index.js","webpack:///./src/Notifications.js","webpack:///./src/Discussion.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","StorageScope","StorageVisibility","BadgeColors","BOARD","CARD","MEMBER","ORGANIZATION","SHARED","PRIVATE","BLUE","GREEN","ORANGE","RED","YELLOW","PURPLE","PINK","SKY","LIME","LIGHTGRAY","ms","TypeError","roundTowardZero","Math","floor","ceil","days","hours","minutes","seconds","milliseconds","BoardStorage","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","Storage","read","DISCUSSION_STATUS","DISCUSSION_CARD_ID","DISCUSSION_STARTED_AT","DISCUSSION_PREVIOUS_ELAPSED","DISCUSSION_INTERVAL_ID","parseMs","addZero","unsignedMs","sign","MESSAGES","NONE","ENDED","LeanCoffeeDiscussionUI","window","_this","_defineProperty","_asyncToGenerator","discussionStatus","cardStorage","getDiscussionStatus","isOngoingOrPausedForThisCard","Statuses","ONGOING","PAUSED","includes","previousStatus","toggleBadges","updateMessage","toggleVoting","updateStatusHeader","updateElapsed","updateThumbs","_ref2","status","startedAt","boardStorage","getDiscussionStartedAt","previousElapsed","getDiscussionPreviousElapsed","elapsed","Date","now","badgeElapsed","classList","add","toLowerCase","remove","textContent","concat","formatDuration","getDiscussionElapsed","_x","apply","arguments","badgeHeaderElapsed","innerText","thumbs","getDiscussionThumbs","currentMember","getContext","member","currentMemberThumbs","keys","Thumbs","forEach","thumbsType","count","filter","length","thumbsBadge","w","document","querySelector","_ref4","saveDiscussionThumbs","_x2","visible","badges","style","display","voting","element","visibility","message","TrelloPowerUp","iframe","Promise","CardStorage","querySelectorAll","monitorDiscussion","intervalId","setInterval","discussionUIInstance","init","DISCUSSION_ELAPSED","DISCUSSION_THUMBS","newStatus","write","newElapsed","newThumbs","newVotes","VOTES","delete","scope","undefined","assign","cardId","set","entries","__WEBPACK_AMD_DEFINE_RESULT__","digits","size","isNegative","Number","buffer","toString","slice","Array","join","Notifications","baseUrl","ELAPSED","audio","text","audioContext","AudioContext","webkitAudioContext","url","fetch","then","response","arrayBuffer","decodeAudioData","audioBuffer","sourceNode","createBufferSource","connect","destination","type","load","start","cardName","Notification","body","icon","_this2","permission","open","requestPermission","UP","DOWN","MIDDLE","Discussion","maxDiscussionDuration","Discussion_classCallCheck","Discussion_defineProperty","_ref","Discussion_asyncToGenerator","boardStatus","getDiscussionCardId","card","cardStatus","_ref3","_x3","pause","saveElapsed","_x4","_ref5","saveDiscussionElapsed","_x5","_ref6","_this$boardStorage$wr","writeMultiple","getElapsed","saveDiscussionStatus","deleteDiscussionThumbs","_x6","_ref7","_this$boardStorage$wr2","notify","getDiscussionIntervalId","cards","find","id","clearInterval","notifications","play","Types","show","_x7","_ref8","deleteMultiple","err","Error","_x8"],"mappings":"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","file":"discussion_ui.4481f790b9e11f4898b9.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"7d0f45dbb48403d2a9a6\");\n","export const VisibilityConditions = {\n  IS_ADMIN: 'admin',\n  CAN_EDIT: 'edit',\n  READ_ONLY: 'readOnly',\n  SIGNED_IN: 'signedIn',\n  SIGNED_OUT: 'signedOut',\n  ALWAYS: 'always'\n};\n\nexport const StorageScope = {\n  BOARD: 'board',\n  CARD: 'card',\n  MEMBER: 'member',\n  ORGANIZATION: 'organization'\n};\n\nexport const StorageVisibility = {\n  SHARED: 'shared',\n  PRIVATE: 'private'\n};\n\nexport const BadgeColors = {\n  BLUE: 'blue',\n  GREEN: 'green',\n  ORANGE: 'orange',\n  RED: 'red',\n  YELLOW: 'yellow',\n  PURPLE: 'purple',\n  PINK: 'pink',\n  SKY: 'sky',\n  LIME: 'lime',\n  LIGHTGRAY: 'light-gray'\n};\n","'use strict';\nmodule.exports = function (ms) {\n\tif (typeof ms !== 'number') {\n\t\tthrow new TypeError('Expected a number');\n\t}\n\n\tvar roundTowardZero = ms > 0 ? Math.floor : Math.ceil;\n\n\treturn {\n\t\tdays: roundTowardZero(ms / 86400000),\n\t\thours: roundTowardZero(ms / 3600000) % 24,\n\t\tminutes: roundTowardZero(ms / 60000) % 60,\n\t\tseconds: roundTowardZero(ms / 1000) % 60,\n\t\tmilliseconds: roundTowardZero(ms) % 1000\n\t};\n};\n","import { StorageScope, StorageVisibility } from '../TrelloConstants';\nimport Storage from './Storage';\n\nclass BoardStorage extends Storage {\n    static DISCUSSION_STATUS = 'leancoffeeDiscussionStatus';\n\n    static DISCUSSION_CARD_ID = 'leancoffeeDiscussionCardId';\n\n    static DISCUSSION_STARTED_AT = 'leancoffeeDiscussionStartedAt';\n\n    static DISCUSSION_PREVIOUS_ELAPSED = 'leancoffeeDiscussionPreviousElapsed';\n\n    static DISCUSSION_INTERVAL_ID = 'leancoffeeDiscussionIntervalId';\n\n    constructor() {\n      super(StorageScope.BOARD, StorageVisibility.SHARED);\n    }\n\n    getDiscussionStatus(t) {\n      return this.read(t, BoardStorage.DISCUSSION_STATUS);\n    }\n\n    getDiscussionCardId(t) {\n      return this.read(t, BoardStorage.DISCUSSION_CARD_ID);\n    }\n\n    getDiscussionStartedAt(t) {\n      return this.read(t, BoardStorage.DISCUSSION_STARTED_AT);\n    }\n\n    getDiscussionPreviousElapsed(t) {\n      return this.read(t, BoardStorage.DISCUSSION_PREVIOUS_ELAPSED);\n    }\n\n    getDiscussionIntervalId(t) {\n      return this.read(t, BoardStorage.DISCUSSION_INTERVAL_ID);\n    }\n}\n\nexport default BoardStorage;\n","const parseMs = require('parse-ms')\nconst addZero = require('add-zero')\n\nmodule.exports = (ms) => {\n  const unsignedMs = ms < 0 ? -ms : ms\n  const sign = ms <= -1000 ? '-' : ''\n  let { days, hours, minutes, seconds } = parseMs(unsignedMs)\n  seconds = addZero(seconds)\n  if (days) return `${sign}${days}:${addZero(hours)}:${addZero(minutes)}:${seconds}`\n  if (hours) return `${sign}${hours}:${addZero(minutes)}:${seconds}`\n  return `${sign}${minutes}:${seconds}`\n}\n","import formatDuration from 'format-duration';\n\nimport BoardStorage from './storage/BoardStorage';\nimport CardStorage from './storage/CardStorage';\nimport { Statuses, Thumbs } from './Discussion';\n\nconst MESSAGES = {\n  NONE: 'This card is not being discussed at the moment.',\n  ENDED: 'The discussion on this card has ended.'\n};\n\n\nclass LeanCoffeeDiscussionUI {\n  constructor(window) {\n    this.w = window;\n    this.t = window.TrelloPowerUp.iframe();\n    this.Promise = window.TrelloPowerUp.Promise;\n    this.boardStorage = new BoardStorage();\n    this.cardStorage = new CardStorage();\n\n    this.badges = this.w.document.querySelector('.badges');\n    this.badgeElapsed = this.w.document.querySelector('.badge-elapsed');\n    this.badgeHeaderElapsed = this.w.document.querySelector('.badge-header-elapsed');\n    this.message = this.w.document.querySelector('.message');\n    this.voting = this.w.document.querySelectorAll('.voting');\n  }\n\n  async init() {\n    this.monitorDiscussion();\n    this.intervalId = setInterval(this.monitorDiscussion, 1000);\n  }\n\n  monitorDiscussion = async () => {\n    const discussionStatus = await this.cardStorage.getDiscussionStatus(this.t);\n    const isOngoingOrPausedForThisCard = [Statuses.ONGOING, Statuses.PAUSED].includes(discussionStatus);\n\n    if (!!discussionStatus && this.previousStatus === discussionStatus && !isOngoingOrPausedForThisCard) {\n      return;\n    }\n\n    switch (discussionStatus) {\n      case Statuses.ENDED: {\n        // when discussion ends, hide badge and display message\n        this.toggleBadges(false);\n        this.updateMessage(MESSAGES.ENDED);\n        break;\n      } case Statuses.ONGOING: {\n        // when discussion is ongoing, update badge (display ongoing and 1-sec res timer)\n        if (this.previousStatus !== discussionStatus) {\n          this.toggleVoting(false);\n          this.toggleBadges(true);\n          this.updateMessage('');\n\n          this.updateStatusHeader(Statuses.ONGOING);\n        }\n\n        this.updateElapsed(Statuses.ONGOING);\n        break;\n      } case Statuses.PAUSED: {\n        // when discussion is paused, update badge (display elapsed and three buttons to deal with discussion)\n        if (this.previousStatus !== discussionStatus) {\n          this.updateMessage('');\n          this.toggleVoting(true);\n          this.toggleBadges(true);\n          this.updateStatusHeader(Statuses.PAUSED);\n          this.updateElapsed(Statuses.PAUSED);\n        }\n\n        this.updateThumbs();\n        break;\n      } default:\n        this.toggleBadges(false);\n        this.toggleVoting(false);\n        this.updateMessage(MESSAGES.NONE);\n        break;\n    }\n\n    this.previousStatus = discussionStatus;\n  };\n\n  updateElapsed = async (status) => {\n    if (status === Statuses.ONGOING) {\n      const startedAt = await this.boardStorage.getDiscussionStartedAt(this.t);\n      const previousElapsed = await this.boardStorage.getDiscussionPreviousElapsed(this.t) || 0;\n      const elapsed = startedAt ? Date.now() - startedAt : 0;\n\n      this.badgeElapsed.classList.add(status.toLowerCase());\n      this.badgeElapsed.classList.remove(Statuses.PAUSED.toLowerCase());\n      this.badgeElapsed.textContent = `Ongoing → ${formatDuration(elapsed + previousElapsed)}`;\n    } else {\n      const elapsed = await this.cardStorage.getDiscussionElapsed(this.t);\n\n      this.badgeElapsed.classList.add(status.toLowerCase());\n      this.badgeElapsed.classList.remove(Statuses.ONGOING.toLowerCase());\n      this.badgeElapsed.textContent = `Elapsed → ${formatDuration(elapsed)}`;\n    }\n  };\n\n  updateStatusHeader = (status) => {\n    if (status === Statuses.PAUSED) {\n      this.badgeHeaderElapsed.innerText = 'Should we keep discussing?';\n    } else {\n      this.badgeHeaderElapsed.innerText = 'Status';\n    }\n  };\n\n  updateThumbs = async () => {\n    const thumbs = await this.cardStorage.getDiscussionThumbs(this.t) || {};\n    const currentMember = this.t.getContext().member;\n    const currentMemberThumbs = thumbs[currentMember];\n\n    Object.keys(Thumbs).forEach((thumbsType) => {\n      const count = Object.keys(thumbs).filter(key => thumbs[key] === Thumbs[thumbsType]).length;\n      const thumbsBadge = this.w.document.querySelector(`.voting-${thumbsType.toLowerCase()}`);\n      thumbsBadge.innerText = count;\n\n      if (thumbsType === currentMemberThumbs) {\n        thumbsBadge.classList.add('own');\n      } else {\n        thumbsBadge.classList.remove('own');\n      }\n    });\n  };\n\n  handleThumbs = async (thumbsType) => {\n    const thumbs = await this.cardStorage.getDiscussionThumbs(this.t) || {};\n    const currentMember = this.t.getContext().member;\n\n    if (thumbs[currentMember] === thumbsType) {\n      delete thumbs[currentMember];\n    } else {\n      thumbs[currentMember] = thumbsType;\n    }\n\n    this.cardStorage.saveDiscussionThumbs(this.t, thumbs);\n  };\n\n  toggleBadges = (visible) => {\n    this.badges.style.display = visible ? 'grid' : 'none';\n  };\n\n  toggleVoting = (visible) => {\n    this.voting.forEach((element) => {\n      element.style.visibility = visible ? 'visible' : 'hidden';\n    });\n  };\n\n  updateMessage = (message) => {\n    this.message.innerText = message;\n    this.message.style.display = 'block';\n  };\n}\n\nexport default LeanCoffeeDiscussionUI;\n","import LeanCoffeeDiscussionUI from './LeanCoffeeDiscussionUI';\n\nwindow.discussionUIInstance = new LeanCoffeeDiscussionUI(window);\nwindow.discussionUIInstance.init();\n","import { StorageScope, StorageVisibility } from '../TrelloConstants';\nimport Storage from './Storage';\n\nclass CardStorage extends Storage {\n  static DISCUSSION_STATUS = 'leancoffeeDiscussionStatus';\n\n  static DISCUSSION_ELAPSED = 'leancoffeeDiscussionElapsed';\n\n  static DISCUSSION_THUMBS = 'leancoffeeDiscussionThumbs';\n\n  static VOTES = 'leancoffeeVotes';\n\n  constructor() {\n    super(StorageScope.CARD, StorageVisibility.SHARED);\n  }\n\n  getDiscussionStatus(t) {\n    return this.read(t, CardStorage.DISCUSSION_STATUS);\n  }\n\n  getDiscussionElapsed(t) {\n    return this.read(t, CardStorage.DISCUSSION_ELAPSED);\n  }\n\n  getDiscussionThumbs(t) {\n    return this.read(t, CardStorage.DISCUSSION_THUMBS);\n  }\n\n  saveDiscussionStatus(t, newStatus) {\n    return this.write(t, CardStorage.DISCUSSION_STATUS, newStatus);\n  }\n\n  saveDiscussionElapsed(t, newElapsed) {\n    return this.write(t, CardStorage.DISCUSSION_ELAPSED, newElapsed);\n  }\n\n  saveDiscussionThumbs(t, newThumbs) {\n    return this.write(t, CardStorage.DISCUSSION_THUMBS, newThumbs);\n  }\n\n  saveVotes(t, newVotes) {\n    return this.write(t, CardStorage.VOTES, newVotes);\n  }\n\n  deleteDiscussionThumbs(t) {\n    return this.delete(t, CardStorage.DISCUSSION_THUMBS);\n  }\n}\n\nexport default CardStorage;\n","import { StorageScope, StorageVisibility } from '../TrelloConstants';\n\nclass Storage {\n  constructor(scope = StorageScope.MEMBER, visibility = StorageVisibility.PRIVATE) {\n    Object.assign(this, { scope, visibility });\n  }\n\n  readById(t, key, cardId) {\n    return t.get(cardId, this.visibility, key);\n  }\n\n  read(t, key) {\n    return t.get(this.scope, this.visibility, key);\n  }\n\n  write(t, key, value) {\n    return t.set(this.scope, this.visibility, key, value);\n  }\n\n  writeMultiple(t, entries) {\n    return t.set(this.scope, this.visibility, entries);\n  }\n\n  delete(t, key) {\n    return t.remove(this.scope, this.visibility, key);\n  }\n\n  deleteMultiple(t, entries) {\n    return t.remove(this.scope, this.visibility, entries);\n  }\n\n  deleteMultipleById(t, entries, cardId) {\n    return t.remove(cardId, this.visibility, entries);\n  }\n}\n\nexport default Storage;\n","(function(exports) {\n\n  'use strict';\n\n  function addZero(value, digits) {\n    digits = digits || 2;\n\n    var isNegative = Number(value) < 0;\n    var buffer = value.toString();\n    var size = 0;\n\n    // Strip minus sign if number is negative\n    if(isNegative) {\n      buffer = buffer.slice(1);\n    }\n\n    size = digits - buffer.length + 1;\n    buffer = new Array(size).join('0').concat(buffer);\n\n    // Adds back minus sign if needed\n    return (isNegative ? '-' : '') + buffer;\n  }\n\n  if(typeof define === 'function' && define.amd) {\n    define(function() { return addZero; });\n  } else if(typeof module !== 'undefined' && module.exports) {\n    module.exports = addZero;\n  } else {\n    exports.addZero = addZero;\n  }\n\n})(this);\n","class Notifications {\n  Types = {\n    ELAPSED: {\n      audio: 'assets/looking_down.mp3',\n      text: 'The timer has elapsed'\n    }\n  };\n\n  constructor(window, baseUrl) {\n    this.w = window;\n    this.baseUrl = baseUrl;\n    this.audioContext = new (this.w.AudioContext || this.w.webkitAudioContext)();\n  }\n\n  load(url) {\n    return fetch(url)\n      .then(response => response.arrayBuffer())\n      .then(arrayBuffer => this.audioContext.decodeAudioData(arrayBuffer))\n      .then((audioBuffer) => {\n        const sourceNode = this.audioContext.createBufferSource();\n        sourceNode.buffer = audioBuffer;\n        sourceNode.connect(this.audioContext.destination);\n        return sourceNode;\n      });\n  }\n\n  async play(type) {\n    const audio = await this.load(`${this.baseUrl}/${type.audio}`);\n    audio.start();\n  }\n\n  open(type, cardName) {\n    // eslint-disable-next-line no-new\n    new this.w.Notification(cardName, {\n      body: type.text,\n      icon: `${this.baseUrl}/assets/timer.png`\n    });\n  }\n\n  show(type, cardName) {\n    if ((!('Notification' in this.w)) || this.w.Notification.permission === 'denied') { return; }\n\n    if (this.w.Notification.permission === 'granted') {\n      this.open(type, cardName);\n    } else {\n      this.w.Notification.requestPermission((permission) => {\n        if (permission === 'granted') {\n          this.open(type, cardName);\n        }\n      });\n    }\n  }\n}\n\nexport default Notifications;\n","import BoardStorage from './storage/BoardStorage';\nimport CardStorage from './storage/CardStorage';\nimport Notifications from './Notifications';\n\nexport const Statuses = {\n  ONGOING: 'ONGOING',\n  PAUSED: 'PAUSED',\n  ENDED: 'ENDED'\n};\n\nexport const Thumbs = {\n  UP: 'UP',\n  DOWN: 'DOWN',\n  MIDDLE: 'MIDDLE'\n};\n\nclass Discussion {\n  constructor(window, baseUrl, maxDiscussionDuration) {\n    this.w = window;\n    this.baseUrl = baseUrl;\n    this.notifications = new Notifications(this.w, this.baseUrl);\n    this.maxDiscussionDuration = maxDiscussionDuration;\n    this.boardStorage = new BoardStorage();\n    this.cardStorage = new CardStorage();\n  }\n\n  isOngoingOrPausedForAnotherCard = async (t) => {\n    const boardStatus = await this.boardStorage.getDiscussionStatus(t);\n    const cardId = await this.boardStorage.getDiscussionCardId(t);\n\n    return [Statuses.ONGOING, Statuses.PAUSED].includes(boardStatus) && cardId !== t.getContext().card;\n  };\n\n  isOngoingFor = async (t) => {\n    const cardStatus = await this.cardStorage.getDiscussionStatus(t);\n    return Statuses.ONGOING === cardStatus;\n  };\n\n  isPausedFor = async (t) => {\n    const cardStatus = await this.cardStorage.getDiscussionStatus(t);\n    return Statuses.PAUSED === cardStatus;\n  };\n\n  getElapsed = t => this.cardStorage.getDiscussionElapsed(t);\n\n  updateElapsed = async (t) => {\n    const startedAt = await this.boardStorage.getDiscussionStartedAt(t);\n    const elapsed = Date.now() - startedAt;\n\n    if (elapsed > this.maxDiscussionDuration) {\n      this.pause(t, true);\n    } else {\n      this.saveElapsed(t);\n    }\n  };\n\n  saveElapsed = async (t) => {\n    const startedAt = await this.boardStorage.getDiscussionStartedAt(t);\n    const previousElapsed = await this.boardStorage.getDiscussionPreviousElapsed(t) || 0;\n    const elapsed = startedAt ? Date.now() - startedAt : 0;\n\n    this.cardStorage.saveDiscussionElapsed(t, (elapsed + previousElapsed));\n  };\n\n  start = async (t) => {\n    this.boardStorage.writeMultiple(t, {\n      [BoardStorage.DISCUSSION_STATUS]: Statuses.ONGOING,\n      [BoardStorage.DISCUSSION_CARD_ID]: t.getContext().card,\n      [BoardStorage.DISCUSSION_STARTED_AT]: Date.now(),\n      [BoardStorage.DISCUSSION_PREVIOUS_ELAPSED]: await this.getElapsed(t),\n      [BoardStorage.DISCUSSION_INTERVAL_ID]: setInterval(this.updateElapsed, 5000, t)\n    });\n\n    await this.cardStorage.saveDiscussionStatus(t, Statuses.ONGOING);\n    await this.cardStorage.deleteDiscussionThumbs(t);\n  };\n\n  pause = async (t, notify = false) => {\n    const intervalId = await this.boardStorage.getDiscussionIntervalId(t);\n    const cardId = await this.boardStorage.getDiscussionCardId(t);\n    const cardName = (await t.cards('id', 'name')).find(card => card.id === cardId).name;\n\n    clearInterval(intervalId);\n\n    this.cardStorage.saveDiscussionStatus(t, Statuses.PAUSED);\n    this.saveElapsed(t);\n    this.boardStorage.writeMultiple(t, {\n      [BoardStorage.DISCUSSION_STATUS]: Statuses.PAUSED,\n      [BoardStorage.DISCUSSION_STARTED_AT]: null,\n      [BoardStorage.DISCUSSION_PREVIOUS_ELAPSED]: await this.getElapsed(t),\n      [BoardStorage.DISCUSSION_INTERVAL_ID]: null\n    });\n\n    if (notify) {\n      this.notifications.play(this.notifications.Types.ELAPSED);\n      this.notifications.show(this.notifications.Types.ELAPSED, cardName);\n    }\n  };\n\n  end = async (t) => {\n    const intervalId = await this.boardStorage.getDiscussionIntervalId(t);\n    clearInterval(intervalId);\n\n    try {\n      await this.cardStorage.saveDiscussionStatus(t, Statuses.ENDED);\n      await this.saveElapsed(t);\n      await this.cardStorage.deleteMultiple(t, [CardStorage.DISCUSSION_THUMBS]);\n      await this.boardStorage.deleteMultiple(t, [\n        BoardStorage.DISCUSSION_STATUS,\n        BoardStorage.DISCUSSION_CARD_ID,\n        BoardStorage.DISCUSSION_STARTED_AT,\n        BoardStorage.DISCUSSION_PREVIOUS_ELAPSED,\n        BoardStorage.DISCUSSION_INTERVAL_ID\n      ]);\n    } catch (err) {\n      throw new Error(err);\n    }\n  };\n}\n\nexport default Discussion;\n"],"sourceRoot":""}