{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/TrelloConstants.js","webpack:///./node_modules/parse-ms/index.js","webpack:///./src/storage/BoardStorage.js","webpack:///./node_modules/format-duration/index.js","webpack:///./src/discussion-ui.js","webpack:///./src/storage/CardStorage.js","webpack:///./src/storage/Storage.js","webpack:///./src/Notifications.js","webpack:///./src/LeanCoffeeDiscussionUI.js","webpack:///./node_modules/add-zero/index.js","webpack:///./src/Discussion.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","124e5333d240f9e9ac9d","e","VisibilityConditions","IS_ADMIN","CAN_EDIT","READ_ONLY","SIGNED_IN","SIGNED_OUT","ALWAYS","StorageScope","BOARD","CARD","MEMBER","ORGANIZATION","StorageVisibility","SHARED","PRIVATE","BadgeColors","BLUE","GREEN","ORANGE","RED","YELLOW","PURPLE","PINK","SKY","LIME","LIGHTGRAY","1b6695f247aa876d8126","ms","TypeError","roundTowardZero","Math","floor","ceil","days","hours","minutes","seconds","milliseconds","3454881a11013d365bc6","length","configurable","writable","_TrelloConstants","a","BoardStorage","this","__proto__","getPrototypeOf","Storage","read","DISCUSSION_STATUS","DISCUSSION_CARD_ID","DISCUSSION_STARTED_AT","DISCUSSION_PREVIOUS_ELAPSED","DISCUSSION_INTERVAL_ID","parseMs","addZero","unsignedMs","sign","window","discussionUIInstance","LeanCoffeeDiscussionUI","init","CardStorage","DISCUSSION_ELAPSED","DISCUSSION_THUMBS","newStatus","write","newElapsed","newThumbs","newVotes","VOTES","delete","scope","arguments","visibility","assign","cardId","set","entries","remove","Notifications","baseUrl","Types","ELAPSED","audio","text","w","audioContext","AudioContext","webkitAudioContext","url","_this","fetch","then","response","arrayBuffer","decodeAudioData","audioBuffer","sourceNode","createBufferSource","buffer","connect","destination","type","load","start","cardName","Notification","body","icon","_this2","permission","open","requestPermission","u","_Discussion","apply","Promise","done","resolve","MESSAGES","NONE","ENDED","monitorDiscussion","_asyncToGenerator","discussionStatus","cardStorage","getDiscussionStatus","isOngoingOrPausedForThisCard","Statuses","ONGOING","PAUSED","includes","previousStatus","toggleBadges","updateMessage","toggleVoting","updateStatusHeader","updateElapsed","updateThumbs","_ref2","status","startedAt","boardStorage","getDiscussionStartedAt","previousElapsed","getDiscussionPreviousElapsed","elapsed","Date","now","badgeElapsed","classList","add","toLowerCase","textContent","_formatDuration2","getDiscussionElapsed","_x","badgeHeaderElapsed","innerText","thumbs","getDiscussionThumbs","currentMember","getContext","member","currentMemberThumbs","keys","Thumbs","forEach","thumbsType","count","filter","thumbsBadge","document","querySelector","handleThumbs","_ref4","saveDiscussionThumbs","_x2","visible","badges","style","display","voting","element","message","TrelloPowerUp","iframe","querySelectorAll","intervalId","setInterval","__WEBPACK_AMD_DEFINE_RESULT__","digits","size","isNegative","Number","toString","slice","Array","join","concat","UP","DOWN","MIDDLE","Discussion","maxDiscussionDuration","isOngoingOrPausedForAnotherCard","_ref","boardStatus","getDiscussionCardId","card","isOngoingFor","cardStatus","isPausedFor","_ref3","_x3","getElapsed","pause","saveElapsed","_x4","_ref5","saveDiscussionElapsed","_x5","_ref6","_this$boardStorage$wr","writeMultiple","_defineProperty","saveDiscussionStatus","deleteDiscussionThumbs","_x6","_ref7","_this$boardStorage$wr2","getDiscussionIntervalId","cards","find","id","clearInterval","notifications","play","show","_x7","end","_ref8","deleteMultiple","err","Error","_x8"],"mappings":"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","file":"discussion_ui.2f715bdeb68ff633a264.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"7d0f45dbb48403d2a9a6\");\n","export const VisibilityConditions = {\n  IS_ADMIN: 'admin',\n  CAN_EDIT: 'edit',\n  READ_ONLY: 'readOnly',\n  SIGNED_IN: 'signedIn',\n  SIGNED_OUT: 'signedOut',\n  ALWAYS: 'always'\n};\n\nexport const StorageScope = {\n  BOARD: 'board',\n  CARD: 'card',\n  MEMBER: 'member',\n  ORGANIZATION: 'organization'\n};\n\nexport const StorageVisibility = {\n  SHARED: 'shared',\n  PRIVATE: 'private'\n};\n\nexport const BadgeColors = {\n  BLUE: 'blue',\n  GREEN: 'green',\n  ORANGE: 'orange',\n  RED: 'red',\n  YELLOW: 'yellow',\n  PURPLE: 'purple',\n  PINK: 'pink',\n  SKY: 'sky',\n  LIME: 'lime',\n  LIGHTGRAY: 'light-gray'\n};\n","'use strict';\nmodule.exports = function (ms) {\n\tif (typeof ms !== 'number') {\n\t\tthrow new TypeError('Expected a number');\n\t}\n\n\tvar roundTowardZero = ms > 0 ? Math.floor : Math.ceil;\n\n\treturn {\n\t\tdays: roundTowardZero(ms / 86400000),\n\t\thours: roundTowardZero(ms / 3600000) % 24,\n\t\tminutes: roundTowardZero(ms / 60000) % 60,\n\t\tseconds: roundTowardZero(ms / 1000) % 60,\n\t\tmilliseconds: roundTowardZero(ms) % 1000\n\t};\n};\n","import { StorageScope, StorageVisibility } from '../TrelloConstants';\nimport Storage from './Storage';\n\nclass BoardStorage extends Storage {\n    static DISCUSSION_STATUS = 'leancoffeeDiscussionStatus';\n    static DISCUSSION_CARD_ID = 'leancoffeeDiscussionCardId';\n    static DISCUSSION_STARTED_AT = 'leancoffeeDiscussionStartedAt';\n    static DISCUSSION_PREVIOUS_ELAPSED = 'leancoffeeDiscussionPreviousElapsed';\n    static DISCUSSION_INTERVAL_ID = 'leancoffeeDiscussionIntervalId';\n\n    constructor() {\n      super(StorageScope.BOARD, StorageVisibility.SHARED);\n    }\n\n    getDiscussionStatus(t) {\n      return this.read(t, BoardStorage.DISCUSSION_STATUS);\n    }\n\n    getDiscussionCardId(t) {\n      return this.read(t, BoardStorage.DISCUSSION_CARD_ID);\n    }\n\n    getDiscussionStartedAt(t) {\n      return this.read(t, BoardStorage.DISCUSSION_STARTED_AT);\n    }\n\n    getDiscussionPreviousElapsed(t) {\n      return this.read(t, BoardStorage.DISCUSSION_PREVIOUS_ELAPSED);\n    }\n\n    getDiscussionIntervalId(t) {\n      return this.read(t, BoardStorage.DISCUSSION_INTERVAL_ID);\n    }\n}\n\nexport default BoardStorage;\n\n","const parseMs = require('parse-ms')\nconst addZero = require('add-zero')\n\nmodule.exports = (ms) => {\n  const unsignedMs = ms < 0 ? -ms : ms\n  const sign = ms <= -1000 ? '-' : ''\n  let { days, hours, minutes, seconds } = parseMs(unsignedMs)\n  seconds = addZero(seconds)\n  if (days) return `${sign}${days}:${addZero(hours)}:${addZero(minutes)}:${seconds}`\n  if (hours) return `${sign}${hours}:${addZero(minutes)}:${seconds}`\n  return `${sign}${minutes}:${seconds}`\n}\n","import LeanCoffeeDiscussionUI from './LeanCoffeeDiscussionUI';\n\nwindow.discussionUIInstance = new LeanCoffeeDiscussionUI(window);\nwindow.discussionUIInstance.init();\n","import { StorageScope, StorageVisibility } from '../TrelloConstants';\nimport Storage from './Storage';\n\nclass CardStorage extends Storage {\n  static DISCUSSION_STATUS = 'leancoffeeDiscussionStatus';\n  static DISCUSSION_ELAPSED = 'leancoffeeDiscussionElapsed';\n  static DISCUSSION_THUMBS = 'leancoffeeDiscussionThumbs';\n  static VOTES = 'leancoffeeVotes';\n\n  constructor() {\n    super(StorageScope.CARD, StorageVisibility.SHARED);\n  }\n\n  getDiscussionStatus(t) {\n    return this.read(t, CardStorage.DISCUSSION_STATUS);\n  }\n\n  getDiscussionElapsed(t) {\n    return this.read(t, CardStorage.DISCUSSION_ELAPSED);\n  }\n\n  getDiscussionThumbs(t) {\n    return this.read(t, CardStorage.DISCUSSION_THUMBS);\n  }\n\n  saveDiscussionStatus(t, newStatus) {\n    return this.write(t, CardStorage.DISCUSSION_STATUS, newStatus);\n  }\n\n  saveDiscussionElapsed(t, newElapsed) {\n    return this.write(t, CardStorage.DISCUSSION_ELAPSED, newElapsed);\n  }\n\n  saveDiscussionThumbs(t, newThumbs) {\n    return this.write(t, CardStorage.DISCUSSION_THUMBS, newThumbs);\n  }\n\n  saveVotes(t, newVotes) {\n    return this.write(t, CardStorage.VOTES, newVotes);\n  }\n\n  deleteDiscussionThumbs(t) {\n    return this.delete(t, CardStorage.DISCUSSION_THUMBS);\n  }\n}\n\nexport default CardStorage;\n","import { StorageScope, StorageVisibility } from '../TrelloConstants';\n\nclass Storage {\n  constructor(scope = StorageScope.MEMBER, visibility = StorageVisibility.PRIVATE) {\n    Object.assign(this, { scope, visibility });\n  }\n\n  readById(t, key, cardId) {\n    return t.get(cardId, this.visibility, key);\n  }\n\n  read(t, key) {\n    return t.get(this.scope, this.visibility, key);\n  }\n\n  write(t, key, value) {\n    return t.set(this.scope, this.visibility, key, value);\n  }\n\n  writeMultiple(t, entries) {\n    return t.set(this.scope, this.visibility, entries);\n  }\n\n  delete(t, key) {\n    return t.remove(this.scope, this.visibility, key);\n  }\n\n  deleteMultiple(t, entries) {\n    return t.remove(this.scope, this.visibility, entries);\n  }\n\n  deleteMultipleById(t, entries, cardId) {\n    return t.remove(cardId, this.visibility, entries);\n  }\n}\n\nexport default Storage;\n","class Notifications {\n  Types = {\n    ELAPSED: {\n      audio: 'assets/looking_down.mp3',\n      text: 'The timer has elapsed'\n    }\n  };\n\n  constructor(window, baseUrl) {\n    this.w = window;\n    this.baseUrl = baseUrl;\n    this.audioContext = new (this.w.AudioContext || this.w.webkitAudioContext)();\n  }\n\n  load(url) {\n    return fetch(url)\n      .then(response => response.arrayBuffer())\n      .then(arrayBuffer => this.audioContext.decodeAudioData(arrayBuffer))\n      .then((audioBuffer) => {\n        const sourceNode = this.audioContext.createBufferSource();\n        sourceNode.buffer = audioBuffer;\n        sourceNode.connect(this.audioContext.destination);\n        return sourceNode;\n      });\n  }\n\n  async play(type) {\n    const audio = await this.load(`${this.baseUrl}/${type.audio}`);\n    audio.start();\n  }\n\n  open(type, cardName) {\n    new this.w.Notification(cardName, {\n      body: type.text,\n      icon: `${this.baseUrl}/assets/timer.png`\n    });\n  }\n\n  show(type, cardName) {\n    if ((!('Notification' in this.w)) || this.w.Notification.permission === 'denied') { return; }\n\n    if (this.w.Notification.permission === 'granted') {\n      this.open(type, cardName);\n    } else {\n      this.w.Notification.requestPermission((permission) => {\n        if (permission === 'granted') {\n          this.open(type, cardName);\n        }\n      });\n    }\n  }\n}\n\nexport default Notifications;\n","import formatDuration from 'format-duration';\n\nimport BoardStorage from './storage/BoardStorage';\nimport CardStorage from './storage/CardStorage';\nimport { Statuses, Thumbs } from './Discussion';\n\nconst MESSAGES = {\n  NONE: 'This card is not being discussed at the moment.',\n  ENDED: 'The discussion on this card has ended.'\n};\n\n\nclass LeanCoffeeDiscussionUI {\n  constructor(window) {\n    this.w = window;\n    this.t = window.TrelloPowerUp.iframe();\n    this.Promise = window.TrelloPowerUp.Promise;\n    this.boardStorage = new BoardStorage();\n    this.cardStorage = new CardStorage();\n\n    this.badges = this.w.document.querySelector('.badges');\n    this.badgeElapsed = this.w.document.querySelector('.badge-elapsed');\n    this.badgeHeaderElapsed = this.w.document.querySelector('.badge-header-elapsed');\n    this.message = this.w.document.querySelector('.message');\n    this.voting = this.w.document.querySelectorAll('.voting');\n  }\n\n  async init() {\n    this.monitorDiscussion();\n    this.intervalId = setInterval(this.monitorDiscussion, 1000);\n  }\n\n  monitorDiscussion = async () => {\n    const discussionStatus = await this.cardStorage.getDiscussionStatus(this.t);\n    const isOngoingOrPausedForThisCard = [Statuses.ONGOING, Statuses.PAUSED].includes(discussionStatus);\n\n    if (!!discussionStatus && this.previousStatus === discussionStatus && !isOngoingOrPausedForThisCard) {\n      return;\n    }\n\n    switch (discussionStatus) {\n      case Statuses.ENDED: {\n        // when discussion ends, hide badge and display message\n        this.toggleBadges(false);\n        this.updateMessage(MESSAGES.ENDED);\n        break;\n      } case Statuses.ONGOING: {\n        // when discussion is ongoing, update badge (display ongoing and 1-sec res timer)\n        if (this.previousStatus !== discussionStatus) {\n          this.toggleVoting(false);\n          this.toggleBadges(true);\n          this.updateMessage('');\n\n          this.updateStatusHeader(Statuses.ONGOING);\n        }\n\n        this.updateElapsed(Statuses.ONGOING);\n        break;\n      } case Statuses.PAUSED: {\n        // when discussion is paused, update badge (display elapsed and three buttons to deal with discussion)\n        if (this.previousStatus !== discussionStatus) {\n          this.updateMessage('');\n          this.toggleVoting(true);\n          this.toggleBadges(true);\n          this.updateStatusHeader(Statuses.PAUSED);\n          this.updateElapsed(Statuses.PAUSED);\n        }\n\n        this.updateThumbs();\n        break;\n      } default:\n        this.toggleBadges(false);\n        this.toggleVoting(false);\n        this.updateMessage(MESSAGES.NONE);\n        break;\n    }\n\n    this.previousStatus = discussionStatus;\n  };\n\n  updateElapsed = async (status) => {\n    if (status === Statuses.ONGOING) {\n      const startedAt = await this.boardStorage.getDiscussionStartedAt(this.t);\n      const previousElapsed = await this.boardStorage.getDiscussionPreviousElapsed(this.t) || 0;\n      const elapsed = startedAt ? Date.now() - startedAt : 0;\n\n      this.badgeElapsed.classList.add(status.toLowerCase());\n      this.badgeElapsed.classList.remove(Statuses.PAUSED.toLowerCase());\n      this.badgeElapsed.textContent = `Ongoing → ${formatDuration(elapsed + previousElapsed)}`;\n    } else {\n      const elapsed = await this.cardStorage.getDiscussionElapsed(this.t);\n\n      this.badgeElapsed.classList.add(status.toLowerCase());\n      this.badgeElapsed.classList.remove(Statuses.ONGOING.toLowerCase());\n      this.badgeElapsed.textContent = `Elapsed → ${formatDuration(elapsed)}`;\n    }\n  };\n\n  updateStatusHeader = (status) => {\n    if (status === Statuses.PAUSED) {\n      this.badgeHeaderElapsed.innerText = 'Should we keep discussing?';\n    } else {\n      this.badgeHeaderElapsed.innerText = 'Status';\n    }\n  };\n\n  updateThumbs = async () => {\n    const thumbs = await this.cardStorage.getDiscussionThumbs(this.t) || {};\n    const currentMember = this.t.getContext().member;\n    const currentMemberThumbs = thumbs[currentMember];\n\n    Object.keys(Thumbs).forEach((thumbsType) => {\n      const count = Object.keys(thumbs).filter(key => thumbs[key] === Thumbs[thumbsType]).length;\n      const thumbsBadge = this.w.document.querySelector(`.voting-${thumbsType.toLowerCase()}`);\n      thumbsBadge.innerText = count;\n\n      if (thumbsType === currentMemberThumbs) {\n        thumbsBadge.classList.add('own');\n      } else {\n        thumbsBadge.classList.remove('own');\n      }\n    });\n  };\n\n  handleThumbs = async (thumbsType) => {\n    const thumbs = await this.cardStorage.getDiscussionThumbs(this.t) || {};\n    const currentMember = this.t.getContext().member;\n\n    if (thumbs[currentMember] === thumbsType) {\n      delete thumbs[currentMember];\n    } else {\n      thumbs[currentMember] = thumbsType;\n    }\n\n    this.cardStorage.saveDiscussionThumbs(this.t, thumbs);\n  };\n\n  toggleBadges = (visible) => {\n    this.badges.style.display = visible ? 'grid' : 'none';\n  };\n\n  toggleVoting = (visible) => {\n    this.voting.forEach((element) => {\n      element.style.visibility = visible ? 'visible' : 'hidden';\n    });\n  };\n\n  updateMessage = (message) => {\n    this.message.innerText = message;\n    this.message.style.display = 'block';\n  };\n}\n\nexport default LeanCoffeeDiscussionUI;\n","(function(exports) {\n\n  'use strict';\n\n  function addZero(value, digits) {\n    digits = digits || 2;\n\n    var isNegative = Number(value) < 0;\n    var buffer = value.toString();\n    var size = 0;\n\n    // Strip minus sign if number is negative\n    if(isNegative) {\n      buffer = buffer.slice(1);\n    }\n\n    size = digits - buffer.length + 1;\n    buffer = new Array(size).join('0').concat(buffer);\n\n    // Adds back minus sign if needed\n    return (isNegative ? '-' : '') + buffer;\n  }\n\n  if(typeof define === 'function' && define.amd) {\n    define(function() { return addZero; });\n  } else if(typeof module !== 'undefined' && module.exports) {\n    module.exports = addZero;\n  } else {\n    exports.addZero = addZero;\n  }\n\n})(this);\n","import BoardStorage from './storage/BoardStorage';\nimport CardStorage from './storage/CardStorage';\nimport Notifications from './Notifications';\n\nexport const Statuses = {\n  ONGOING: 'ONGOING',\n  PAUSED: 'PAUSED',\n  ENDED: 'ENDED'\n};\n\nexport const Thumbs = {\n  UP: 'UP',\n  DOWN: 'DOWN',\n  MIDDLE: 'MIDDLE'\n};\n\nclass Discussion {\n  constructor(window, baseUrl, maxDiscussionDuration) {\n    this.w = window;\n    this.baseUrl = baseUrl;\n    this.notifications = new Notifications(this.w, this.baseUrl);\n    this.maxDiscussionDuration = maxDiscussionDuration;\n    this.boardStorage = new BoardStorage();\n    this.cardStorage = new CardStorage();\n  }\n\n  isOngoingOrPausedForAnotherCard = async (t) => {\n    const boardStatus = await this.boardStorage.getDiscussionStatus(t);\n    const cardId = await this.boardStorage.getDiscussionCardId(t);\n\n    return [Statuses.ONGOING, Statuses.PAUSED].includes(boardStatus) &&\n      cardId !== t.getContext().card;\n  };\n\n  isOngoingFor = async (t) => {\n    const cardStatus = await this.cardStorage.getDiscussionStatus(t);\n    return Statuses.ONGOING === cardStatus;\n  };\n\n  isPausedFor = async (t) => {\n    const cardStatus = await this.cardStorage.getDiscussionStatus(t);\n    return Statuses.PAUSED === cardStatus;\n  };\n\n  getElapsed = t => this.cardStorage.getDiscussionElapsed(t);\n\n  updateElapsed = async (t) => {\n    const startedAt = await this.boardStorage.getDiscussionStartedAt(t);\n    const elapsed = Date.now() - startedAt;\n\n    if (elapsed > this.maxDiscussionDuration) {\n      this.pause(t);\n    } else {\n      this.saveElapsed(t);\n    }\n  };\n\n  saveElapsed = async (t) => {\n    const startedAt = await this.boardStorage.getDiscussionStartedAt(t);\n    const previousElapsed = await this.boardStorage.getDiscussionPreviousElapsed(t) || 0;\n    const elapsed = startedAt ? Date.now() - startedAt : 0;\n\n    this.cardStorage.saveDiscussionElapsed(t, (elapsed + previousElapsed));\n  };\n\n  start = async (t) => {\n    this.boardStorage.writeMultiple(t, {\n      [BoardStorage.DISCUSSION_STATUS]: Statuses.ONGOING,\n      [BoardStorage.DISCUSSION_CARD_ID]: t.getContext().card,\n      [BoardStorage.DISCUSSION_STARTED_AT]: Date.now(),\n      [BoardStorage.DISCUSSION_PREVIOUS_ELAPSED]: await this.getElapsed(t),\n      [BoardStorage.DISCUSSION_INTERVAL_ID]: setInterval(this.updateElapsed, 5000, t)\n    });\n\n    await this.cardStorage.saveDiscussionStatus(t, Statuses.ONGOING);\n    await this.cardStorage.deleteDiscussionThumbs(t);\n  };\n\n  pause = async (t) => {\n    const intervalId = await this.boardStorage.getDiscussionIntervalId(t);\n    const cardId = await this.boardStorage.getDiscussionCardId(t);\n    const cardName = (await t.cards('id', 'name')).find(card => card.id === cardId).name;\n\n    clearInterval(intervalId);\n\n    this.cardStorage.saveDiscussionStatus(t, Statuses.PAUSED);\n    this.saveElapsed(t);\n    this.boardStorage.writeMultiple(t, {\n      [BoardStorage.DISCUSSION_STATUS]: Statuses.PAUSED,\n      [BoardStorage.DISCUSSION_STARTED_AT]: null,\n      [BoardStorage.DISCUSSION_PREVIOUS_ELAPSED]: await this.getElapsed(t),\n      [BoardStorage.DISCUSSION_INTERVAL_ID]: null\n    });\n\n    this.notifications.play(this.notifications.Types.ELAPSED);\n    this.notifications.show(this.notifications.Types.ELAPSED, cardName);\n  };\n\n  end = async (t) => {\n    const intervalId = await this.boardStorage.getDiscussionIntervalId(t);\n    clearInterval(intervalId);\n\n    try {\n      await this.cardStorage.saveDiscussionStatus(t, Statuses.ENDED);\n      await this.saveElapsed(t);\n      await this.cardStorage.deleteMultiple(t, [CardStorage.DISCUSSION_THUMBS]);\n      await this.boardStorage.deleteMultiple(t, [\n        BoardStorage.DISCUSSION_STATUS,\n        BoardStorage.DISCUSSION_CARD_ID,\n        BoardStorage.DISCUSSION_STARTED_AT,\n        BoardStorage.DISCUSSION_PREVIOUS_ELAPSED,\n        BoardStorage.DISCUSSION_INTERVAL_ID\n      ]);\n    } catch (err) {\n      throw new Error(err);\n    }\n  };\n}\n\nexport default Discussion;\n"],"sourceRoot":""}