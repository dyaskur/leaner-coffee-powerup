{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/TrelloConstants.js","webpack:///./node_modules/parse-ms/index.js","webpack:///./src/badges/ElapsedCardBadge.js","webpack:///./src/badges/ElapsedCardDetailBadge.js","webpack:///./src/badges/VotingCardBadge.js","webpack:///./src/badges/VotingCardDetailBadge.js","webpack:///./src/Voting.js","webpack:///./src/index.js","webpack:///./src/LeanCoffeePowerUp.js","webpack:///./src/storage/BoardStorage.js","webpack:///./node_modules/format-duration/index.js","webpack:///./src/storage/CardStorage.js","webpack:///./src/storage/Storage.js","webpack:///./node_modules/add-zero/index.js","webpack:///./src/Notifications.js","webpack:///./src/Discussion.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","StorageScope","StorageVisibility","BadgeColors","BOARD","CARD","MEMBER","ORGANIZATION","SHARED","PRIVATE","BLUE","GREEN","ORANGE","RED","YELLOW","PURPLE","PINK","SKY","LIME","LIGHTGRAY","ms","TypeError","roundTowardZero","Math","floor","ceil","days","hours","minutes","seconds","milliseconds","ElapsedCardBadge","discussion","_this","this","_classCallCheck","_defineProperty","_ref","_asyncToGenerator","elapsed","formatDuration","_x","_x2","apply","arguments","_ref2","isOngoingFor","isPausedFor","_x3","render","EMPTY_TITLE","getElapsed","title","getTitle","text","getText","color","getColor","ElapsedCardDetailBadge","cardStorage","getDiscussionStatus","Statuses","ENDED","_get","_getPrototypeOf","_assertThisInitialized","VotingCardBadge","baseUrl","voting","VotingCardBadge_classCallCheck","VotingCardBadge_asyncToGenerator","votes","getVotes","values","reduce","knownVoters","vote","username","push","concat","fullName","voters","getVoters","length","hasVoted","hasCurrentMemberVoted","icon","VotingCardDetailBadge","items","popup","commonData","VotingCardDetailBadge_get","VotingCardDetailBadge_getPrototypeOf","VotingCardDetailBadge_assertThisInitialized","callback","showVoters","Voting","trello","Voting_classCallCheck","Voting_defineProperty","Voting_asyncToGenerator","read","CardStorage","VOTES","getContext","member","_ref3","cardId","readById","keys","filter","_x4","_ref4","currentList","list","cards","_x5","_ref5","cardIds","map","card","id","countVotesByMember","getMaxVotes","_x6","_ref6","promise","all","_ref7","_x9","total","_x7","_x8","Promise","process","hostname","port","LeanCoffeePowerUp","window","TrelloPowerUp","maxDiscussionDuration","LeanCoffeePowerUp_classCallCheck","LeanCoffeePowerUp_defineProperty","LeanCoffeePowerUp_asyncToGenerator","undefined","content","type","url","signUrl","height","elapsedCardBadge","votingCardBadge","badge","getButtonLabel","handleDiscussion","handleVoting","elapsedCardDetailBadge","votingCardDetailBadge","_callback","opts","sortedIds","leanCoffeeVotes","countVotesByCard","assign","sort","cardA","cardB","canCurrentMemberVote","currentMember","avatar","saveVotes","args","maxVotes","_ref8","isOngoingOrPausedForAnotherCard","boardStatus","boardStorage","getDiscussionCardId","cardName","find","currentCardBeingDiscussed","currentDiscussionStatus","_callback2","t2","pause","closePopup","saveDiscussionButtonLabel","_x10","_callback3","end","_x11","_callback4","start","_x12","_callback5","_x13","_callback6","_x14","_ref9","label","getDiscussionButtonLabel","setTimeout","_x15","w","BoardStorage","Discussion","initialize","card-back-section","handleCardBackSection","card-badges","handleCardBadges","card-buttons","handleCardButtons","card-detail-badges","handleCardDetailBadges","list-sorters","handleListSorters","show-settings","showSettings","_possibleConstructorReturn","Storage","DISCUSSION_STATUS","DISCUSSION_CARD_ID","DISCUSSION_STARTED_AT","DISCUSSION_PREVIOUS_ELAPSED","DISCUSSION_INTERVAL_ID","parseMs","addZero","unsignedMs","sign","DISCUSSION_ELAPSED","DISCUSSION_THUMBS","DISCUSSION_BUTTON_LABEL","newStatus","write","newElapsed","newThumbs","newVotes","newLabel","delete","scope","visibility","set","entries","remove","__WEBPACK_AMD_DEFINE_RESULT__","digits","size","isNegative","Number","buffer","toString","slice","Array","join","Notifications","ELAPSED","audio","fetch","then","response","arrayBuffer","audioContext","decodeAudioData","audioBuffer","sourceNode","createBufferSource","connect","destination","AudioContext","webkitAudioContext","load","Notification","body","_this2","permission","open","requestPermission","ONGOING","PAUSED","Thumbs","UP","DOWN","MIDDLE","Discussion_classCallCheck","Discussion_defineProperty","Discussion_asyncToGenerator","includes","cardStatus","getDiscussionElapsed","startedAt","getDiscussionStartedAt","Date","now","clearInterval","getDiscussionIntervalId","saveElapsed","previousElapsed","getDiscussionPreviousElapsed","saveDiscussionElapsed","_this$boardStorage$wr","writeMultiple","setInterval","updateElapsed","saveDiscussionStatus","deleteDiscussionThumbs","_this$boardStorage$wr2","notify","intervalId","notifications","play","Types","show","deleteMultiple","err","Error"],"mappings":"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","file":"main.c9bf1ec68fdcdcc68c24.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"3177845424933048caec\");\n","export const VisibilityConditions = {\n  IS_ADMIN: 'admin',\n  CAN_EDIT: 'edit',\n  READ_ONLY: 'readOnly',\n  SIGNED_IN: 'signedIn',\n  SIGNED_OUT: 'signedOut',\n  ALWAYS: 'always'\n};\n\nexport const StorageScope = {\n  BOARD: 'board',\n  CARD: 'card',\n  MEMBER: 'member',\n  ORGANIZATION: 'organization'\n};\n\nexport const StorageVisibility = {\n  SHARED: 'shared',\n  PRIVATE: 'private'\n};\n\nexport const BadgeColors = {\n  BLUE: 'blue',\n  GREEN: 'green',\n  ORANGE: 'orange',\n  RED: 'red',\n  YELLOW: 'yellow',\n  PURPLE: 'purple',\n  PINK: 'pink',\n  SKY: 'sky',\n  LIME: 'lime',\n  LIGHTGRAY: 'light-gray'\n};\n","'use strict';\nmodule.exports = function (ms) {\n\tif (typeof ms !== 'number') {\n\t\tthrow new TypeError('Expected a number');\n\t}\n\n\tvar roundTowardZero = ms > 0 ? Math.floor : Math.ceil;\n\n\treturn {\n\t\tdays: roundTowardZero(ms / 86400000),\n\t\thours: roundTowardZero(ms / 3600000) % 24,\n\t\tminutes: roundTowardZero(ms / 60000) % 60,\n\t\tseconds: roundTowardZero(ms / 1000) % 60,\n\t\tmilliseconds: roundTowardZero(ms) % 1000\n\t};\n};\n","import formatDuration from 'format-duration';\n\nimport { BadgeColors } from '../TrelloConstants';\n\n\nclass ElapsedCardBadge {\n  EMPTY_TITLE = '';\n\n  constructor(discussion) {\n    this.discussion = discussion;\n    this.render = this.render.bind(this);\n  }\n\n  getTitle() {\n    return this.EMPTY_TITLE;\n  }\n\n  getText = async (t, elapsed) => formatDuration(elapsed);\n\n  getColor = async (t) => {\n    const isOngoing = await this.discussion.isOngoingFor(t);\n\n    if (isOngoing) { return BadgeColors.ORANGE; }\n\n    return await this.discussion.isPausedFor(t) ? BadgeColors.YELLOW : BadgeColors.LIGHTGRAY;\n  };\n\n\n  // Unable to use class properties here because I need to call\n  // it from a subclass, and it's currently broken - see:\n  // https://github.com/babel/babel/issues/5104\n  //\n  // Upgrading to Babel 7.x should solve it.\n  async render(t) {\n    const elapsed = await this.discussion.getElapsed(t);\n    if (!elapsed) { return null; }\n\n    return {\n      title: this.getTitle(t),\n      text: await this.getText(t, elapsed),\n      color: await this.getColor(t)\n    };\n  }\n}\n\nexport default ElapsedCardBadge;\n","import { Statuses } from '../Discussion';\nimport ElapsedCardBadge from './ElapsedCardBadge';\n\n\nclass ElapsedCardDetailBadge extends ElapsedCardBadge {\n  getTitle = () => 'Discussion time';\n\n  render = async (t) => {\n    const discussionStatus = await this.discussion.cardStorage.getDiscussionStatus(t);\n    if (discussionStatus !== Statuses.ENDED) { return null; }\n\n    return super.render(t);\n  };\n}\n\nexport default ElapsedCardDetailBadge;\n","class VotingCardBadge {\n  constructor(baseUrl, voting) {\n    this.baseUrl = baseUrl;\n    this.voting = voting;\n    this.render = this.render.bind(this);\n  }\n\n  getVoters = async (t) => {\n    const votes = await this.voting.getVotes(t) || {};\n\n    return Object.values(votes).reduce((knownVoters, vote) => {\n      if (vote.username) {\n        knownVoters.push({ text: `${vote.username} (${vote.fullName})` });\n      }\n\n      return knownVoters;\n    }, []);\n  };\n\n  // Unable to use class properties here because I need to call\n  // it from a subclass, and it's currently broken - see:\n  // https://github.com/babel/babel/issues/5104\n  //\n  // Upgrading to Babel 7.x should solve it.\n  async render(t) {\n    const voters = await this.getVoters(t);\n    if (!voters.length) { return null; }\n\n    const hasVoted = await this.voting.hasCurrentMemberVoted(t);\n\n    return {\n      text: voters.length,\n      color: hasVoted ? 'blue' : null,\n      icon: `${this.baseUrl}/assets/powerup/${hasVoted ? 'heart_white.svg' : 'heart.svg'}`,\n    };\n  }\n}\n\nexport default VotingCardBadge;\n","import VotingCardBadge from './VotingCardBadge';\n\nclass VotingCardDetailBadge extends VotingCardBadge {\n  showVoters = async (t) => {\n    const items = await this.getVoters(t);\n\n    if (!items.length) { return; }\n\n    t.popup({\n      title: 'Voters',\n      items\n    });\n  };\n\n  render = async (t) => {\n    const commonData = await super.render(t);\n\n    if (commonData) {\n      commonData.title = 'Voters';\n      delete commonData.icon;\n      commonData.callback = this.showVoters;\n    }\n\n    return commonData;\n  };\n}\n\nexport default VotingCardDetailBadge;\n","import CardStorage from './storage/CardStorage';\n\nclass Voting {\n  constructor(trello) {\n    this.cardStorage = new CardStorage();\n    this.promise = trello.Promise;\n  }\n\n  hasCurrentMemberVoted = async (t) => {\n    const votes = await this.cardStorage.read(t, CardStorage.VOTES);\n    if (!votes) { return false; }\n\n    const currentMember = t.getContext().member;\n    return !!votes[currentMember];\n  };\n\n  getVotes = async t => this.cardStorage.read(t, CardStorage.VOTES);\n\n  countVotesByCard = async (t, cardId) => {\n    const votes = await this.cardStorage.readById(t, CardStorage.VOTES, cardId);\n\n    if (!votes) { return 0; }\n\n    return Object.keys(votes).filter(key => votes[key]).length;\n  };\n\n  getMaxVotes = async (t) => {\n    const currentList = await t.list('cards');\n\n    // http://www.leanmath.com/blog-entry/multi-voting-math-or-n3\n    return Math.ceil(currentList.cards.length / 3);\n  };\n\n  canCurrentMemberVote = async (t) => {\n    if (await this.hasCurrentMemberVoted(t)) { return true; }\n\n    const currentList = await t.list('cards');\n    const cardIds = currentList.cards.map(card => card.id);\n    const currentMemberVotes = await this.countVotesByMember(t, cardIds);\n    const maxVotes = await this.getMaxVotes(t);\n\n    return currentMemberVotes < maxVotes;\n  };\n\n  countVotesByMember = async (t, cardIds) => {\n    const listVotes = await this.promise.all(cardIds.map(async (cardId) => {\n      const votes = await this.cardStorage.readById(t, CardStorage.VOTES, cardId);\n      if (!votes) { return 0; }\n\n      const currentMember = t.getContext().member;\n      return !!votes[currentMember];\n    }));\n\n    return listVotes.reduce((total, vote) => total + vote, 0);\n  };\n}\n\nexport default Voting;\n","import LeanCoffeePowerUp from './LeanCoffeePowerUp';\n\nconst { hostname, port } = process.env.CONFIG[process.env.NODE_ENV];\nconst DEFAULT_DISCUSSION_DURATION = 5 * 60 * 1000;\n\n/* eslint-disable prefer-template */\nconst instance = new LeanCoffeePowerUp({\n  window,\n  TrelloPowerUp: window.TrelloPowerUp,\n  baseUrl: `${hostname}${port ? ':' + port : ''}`,\n  maxDiscussionDuration: DEFAULT_DISCUSSION_DURATION\n});\n\ninstance.start();\n","import BoardStorage from './storage/BoardStorage';\nimport CardStorage from './storage/CardStorage';\nimport ElapsedCardBadge from './badges/ElapsedCardBadge';\nimport ElapsedCardDetailBadge from './badges/ElapsedCardDetailBadge';\nimport VotingCardBadge from './badges/VotingCardBadge';\nimport VotingCardDetailBadge from './badges/VotingCardDetailBadge';\nimport Discussion from './Discussion';\nimport Voting from './Voting';\n\n\nclass LeanCoffeePowerUp {\n  constructor({\n    window, TrelloPowerUp, baseUrl, maxDiscussionDuration\n  }) {\n    this.w = window;\n    this.trello = TrelloPowerUp;\n    this.baseUrl = baseUrl;\n\n    this.boardStorage = new BoardStorage();\n    this.cardStorage = new CardStorage();\n    this.discussion = new Discussion(this.w, this.baseUrl, maxDiscussionDuration);\n    this.voting = new Voting(this.trello);\n\n    this.elapsedCardBadge = new ElapsedCardBadge(this.discussion);\n    this.elapsedCardDetailBadge = new ElapsedCardDetailBadge(this.discussion);\n    this.votingCardBadge = new VotingCardBadge(this.baseUrl, this.voting);\n    this.votingCardDetailBadge = new VotingCardDetailBadge(this.baseUrl, this.voting);\n  }\n\n  handleCardBackSection = async (t) => {\n    const discussionStatus = await this.discussion.cardStorage.getDiscussionStatus(t);\n    if (discussionStatus === undefined) { return null; }\n\n    return {\n      title: 'Discussion',\n      icon: `${this.baseUrl}/assets/powerup/timer.svg`,\n      content: {\n        type: 'iframe',\n        url: t.signUrl(`${this.baseUrl}/discussion-ui.html`),\n        height: 64\n      }\n    };\n  };\n\n  handleCardBadges = async (t) => {\n    const badges = [\n      await this.elapsedCardBadge.render(t),\n      await this.votingCardBadge.render(t)\n    ];\n\n    return badges.filter(badge => badge);\n  };\n\n  handleCardButtons = async t => [{\n    icon: `${this.baseUrl}/assets/powerup/timer.svg`,\n    text: await this.getButtonLabel(t),\n    callback: this.handleDiscussion\n  }, {\n    icon: `${this.baseUrl}/assets/powerup/heart.svg`,\n    text: `Vote    ${await this.voting.hasCurrentMemberVoted(t) ? '☑' : '☐'}`,\n    callback: this.handleVoting\n  }];\n\n  handleCardDetailBadges = async (t) => {\n    const badges = [\n      await this.elapsedCardDetailBadge.render(t),\n      await this.votingCardDetailBadge.render(t)\n    ];\n\n    return badges.filter(badge => badge);\n  };\n\n  handleListSorters = () => [{\n    text: 'Most Votes',\n    callback: async (t, opts) => {\n      const countedCards = await this.trello.Promise.all(opts.cards.map(async (card) => {\n        const leanCoffeeVotes = await this.voting.countVotesByCard(t, card.id);\n        return Object.assign({ leanCoffeeVotes }, card);\n      }));\n\n      const sortedCards = countedCards.sort((cardA, cardB) => {\n        if (cardA.leanCoffeeVotes < cardB.leanCoffeeVotes) { return 1; }\n        if (cardB.leanCoffeeVotes < cardA.leanCoffeeVotes) { return -1; }\n        return 0;\n      });\n\n      return {\n        sortedIds: sortedCards.map(card => card.id)\n      };\n    }\n  }];\n\n  showSettings = t => t.popup({\n    title: `Leaner Coffee v${process.env.VERSION}`,\n    url: `${this.baseUrl}/settings.html`,\n    height: 184\n  });\n\n  handleVoting = async (t) => {\n    if (!await this.voting.canCurrentMemberVote(t)) {\n      t.popup({\n        title: 'Leaner Coffee',\n        url: `${this.baseUrl}/too_many_votes.html`,\n        args: {\n          maxVotes: await this.voting.getMaxVotes(t)\n        },\n        height: 98\n      });\n\n      return;\n    }\n\n    const votes = await this.voting.getVotes(t) || {};\n    const currentMember = await t.member('id', 'username', 'fullName', 'avatar');\n\n    if (votes[currentMember.id]) {\n      delete votes[currentMember.id];\n    } else {\n      votes[currentMember.id] = {\n        username: currentMember.username,\n        fullName: currentMember.fullName,\n        avatar: currentMember.avatar // currently unused\n      };\n    }\n\n    this.cardStorage.saveVotes(t, votes);\n  };\n\n  handleDiscussion = async (t) => {\n    if (await this.discussion.isOngoingOrPausedForAnotherCard(t)) {\n      const boardStatus = await this.boardStorage.getDiscussionStatus(t);\n      const cardId = await this.boardStorage.getDiscussionCardId(t);\n      const cardName = (await t.cards('id', 'name')).find(card => card.id === cardId).name;\n\n      t.popup({\n        title: 'Leaner Coffee',\n        url: `${this.baseUrl}/ongoing_or_paused.html`,\n        args: {\n          currentCardBeingDiscussed: cardName,\n          currentDiscussionStatus: boardStatus\n        },\n        height: 120\n      });\n    } else {\n      let items = [];\n\n      switch (true) {\n        case await this.discussion.isOngoingFor(t):\n          items = [{\n            text: '❙ ❙  Pause timer', // MEDIUM VERTICAL BAR + NARROW NO-BREAK SPACE\n            callback: async (t2) => {\n              this.discussion.pause(t2);\n              t2.closePopup();\n              await this.discussion.cardStorage.saveDiscussionButtonLabel(t2, 'Pausing ❙ ❙');\n            }\n          }, {\n            text: '■ End discussion', // BLACK SQUARE\n            callback: async (t2) => {\n              this.discussion.end(t2);\n              t2.closePopup();\n              await this.discussion.cardStorage.saveDiscussionButtonLabel(t2, 'Stopping ■');\n            }\n          }];\n          break;\n        case await this.discussion.isPausedFor(t):\n          items = [{\n            text: '▶ Resume discussion', // BLACK RIGHT-POINTING TRIANGLE\n            callback: async (t2) => {\n              this.discussion.start(t2);\n              t2.closePopup();\n              await this.discussion.cardStorage.saveDiscussionButtonLabel(t2, 'Resuming ▶');\n            }\n          }, {\n            text: '■ End discussion', // BLACK SQUARE\n            callback: async (t2) => {\n              this.discussion.end(t2);\n              t2.closePopup();\n              await this.discussion.cardStorage.saveDiscussionButtonLabel(t2, 'Stopping ■');\n            }\n          }];\n          break;\n        default:\n          items = [{\n            text: '▶ Start timer', // BLACK RIGHT-POINTING TRIANGLE\n            callback: async (t2) => {\n              this.discussion.start(t2);\n              t2.closePopup();\n              await this.discussion.cardStorage.saveDiscussionButtonLabel(t2, 'Starting ▶');\n            }\n          }];\n      }\n\n      t.popup({\n        title: 'Leaner Coffee',\n        items\n      });\n    }\n  };\n\n  getButtonLabel = async (t) => {\n    let label = await this.discussion.cardStorage.getDiscussionButtonLabel(t);\n\n    if (label) {\n      setTimeout(() => {\n        this.discussion.cardStorage.saveDiscussionButtonLabel(t);\n      }, 2000);\n    }\n\n    label = label || 'Discussion';\n\n    return label;\n  };\n\n  start() {\n    this.trello.initialize({\n      'card-back-section': this.handleCardBackSection,\n      'card-badges': this.handleCardBadges,\n      'card-buttons': this.handleCardButtons,\n      'card-detail-badges': this.handleCardDetailBadges,\n      'list-sorters': this.handleListSorters,\n      'show-settings': this.showSettings\n    });\n  }\n}\n\nexport default LeanCoffeePowerUp;\n","import { StorageScope, StorageVisibility } from '../TrelloConstants';\nimport Storage from './Storage';\n\nclass BoardStorage extends Storage {\n    static DISCUSSION_STATUS = 'leancoffeeDiscussionStatus';\n\n    static DISCUSSION_CARD_ID = 'leancoffeeDiscussionCardId';\n\n    static DISCUSSION_STARTED_AT = 'leancoffeeDiscussionStartedAt';\n\n    static DISCUSSION_PREVIOUS_ELAPSED = 'leancoffeeDiscussionPreviousElapsed';\n\n    static DISCUSSION_INTERVAL_ID = 'leancoffeeDiscussionIntervalId';\n\n    constructor() {\n      super(StorageScope.BOARD, StorageVisibility.SHARED);\n    }\n\n    getDiscussionStatus(t) {\n      return this.read(t, BoardStorage.DISCUSSION_STATUS);\n    }\n\n    getDiscussionCardId(t) {\n      return this.read(t, BoardStorage.DISCUSSION_CARD_ID);\n    }\n\n    getDiscussionStartedAt(t) {\n      return this.read(t, BoardStorage.DISCUSSION_STARTED_AT);\n    }\n\n    getDiscussionPreviousElapsed(t) {\n      return this.read(t, BoardStorage.DISCUSSION_PREVIOUS_ELAPSED);\n    }\n\n    getDiscussionIntervalId(t) {\n      return this.read(t, BoardStorage.DISCUSSION_INTERVAL_ID);\n    }\n}\n\nexport default BoardStorage;\n","const parseMs = require('parse-ms')\nconst addZero = require('add-zero')\n\nmodule.exports = (ms) => {\n  const unsignedMs = ms < 0 ? -ms : ms\n  const sign = ms <= -1000 ? '-' : ''\n  let { days, hours, minutes, seconds } = parseMs(unsignedMs)\n  seconds = addZero(seconds)\n  if (days) return `${sign}${days}:${addZero(hours)}:${addZero(minutes)}:${seconds}`\n  if (hours) return `${sign}${hours}:${addZero(minutes)}:${seconds}`\n  return `${sign}${minutes}:${seconds}`\n}\n","import { StorageScope, StorageVisibility } from '../TrelloConstants';\nimport Storage from './Storage';\n\nclass CardStorage extends Storage {\n  static DISCUSSION_STATUS = 'leancoffeeDiscussionStatus';\n\n  static DISCUSSION_ELAPSED = 'leancoffeeDiscussionElapsed';\n\n  static DISCUSSION_THUMBS = 'leancoffeeDiscussionThumbs';\n\n  static VOTES = 'leancoffeeVotes';\n\n  static DISCUSSION_BUTTON_LABEL = 'discussionButtonLabel';\n\n  constructor() {\n    super(StorageScope.CARD, StorageVisibility.SHARED);\n  }\n\n  getDiscussionStatus(t) {\n    return this.read(t, CardStorage.DISCUSSION_STATUS);\n  }\n\n  getDiscussionElapsed(t) {\n    return this.read(t, CardStorage.DISCUSSION_ELAPSED);\n  }\n\n  getDiscussionThumbs(t) {\n    return this.read(t, CardStorage.DISCUSSION_THUMBS);\n  }\n\n  getDiscussionButtonLabel(t) {\n    return this.read(t, CardStorage.DISCUSSION_BUTTON_LABEL);\n  }\n\n  saveDiscussionStatus(t, newStatus) {\n    return this.write(t, CardStorage.DISCUSSION_STATUS, newStatus);\n  }\n\n  saveDiscussionElapsed(t, newElapsed) {\n    return this.write(t, CardStorage.DISCUSSION_ELAPSED, newElapsed);\n  }\n\n  saveDiscussionThumbs(t, newThumbs) {\n    return this.write(t, CardStorage.DISCUSSION_THUMBS, newThumbs);\n  }\n\n  saveVotes(t, newVotes) {\n    return this.write(t, CardStorage.VOTES, newVotes);\n  }\n\n  saveDiscussionButtonLabel(t, newLabel) {\n    return this.write(t, CardStorage.DISCUSSION_BUTTON_LABEL, newLabel);\n  }\n\n  deleteDiscussionThumbs(t) {\n    return this.delete(t, CardStorage.DISCUSSION_THUMBS);\n  }\n}\n\nexport default CardStorage;\n","import { StorageScope, StorageVisibility } from '../TrelloConstants';\n\nclass Storage {\n  constructor(scope = StorageScope.MEMBER, visibility = StorageVisibility.PRIVATE) {\n    Object.assign(this, { scope, visibility });\n  }\n\n  readById(t, key, cardId) {\n    return t.get(cardId, this.visibility, key);\n  }\n\n  read(t, key) {\n    return t.get(this.scope, this.visibility, key);\n  }\n\n  write(t, key, value) {\n    return t.set(this.scope, this.visibility, key, value);\n  }\n\n  writeMultiple(t, entries) {\n    return t.set(this.scope, this.visibility, entries);\n  }\n\n  delete(t, key) {\n    return t.remove(this.scope, this.visibility, key);\n  }\n\n  deleteMultiple(t, entries) {\n    return t.remove(this.scope, this.visibility, entries);\n  }\n\n  deleteMultipleById(t, entries, cardId) {\n    return t.remove(cardId, this.visibility, entries);\n  }\n}\n\nexport default Storage;\n","(function(exports) {\n\n  'use strict';\n\n  function addZero(value, digits) {\n    digits = digits || 2;\n\n    var isNegative = Number(value) < 0;\n    var buffer = value.toString();\n    var size = 0;\n\n    // Strip minus sign if number is negative\n    if(isNegative) {\n      buffer = buffer.slice(1);\n    }\n\n    size = digits - buffer.length + 1;\n    buffer = new Array(size).join('0').concat(buffer);\n\n    // Adds back minus sign if needed\n    return (isNegative ? '-' : '') + buffer;\n  }\n\n  if(typeof define === 'function' && define.amd) {\n    define(function() { return addZero; });\n  } else if(typeof module !== 'undefined' && module.exports) {\n    module.exports = addZero;\n  } else {\n    exports.addZero = addZero;\n  }\n\n})(this);\n","class Notifications {\n  Types = {\n    ELAPSED: {\n      audio: 'assets/looking_down.mp3',\n      text: 'The timer has elapsed'\n    }\n  };\n\n  constructor(window, baseUrl) {\n    this.w = window;\n    this.baseUrl = baseUrl;\n  }\n\n  load(url) {\n    return fetch(url)\n      .then(response => response.arrayBuffer())\n      .then(arrayBuffer => this.audioContext.decodeAudioData(arrayBuffer))\n      .then((audioBuffer) => {\n        const sourceNode = this.audioContext.createBufferSource();\n        sourceNode.buffer = audioBuffer;\n        sourceNode.connect(this.audioContext.destination);\n        return sourceNode;\n      });\n  }\n\n  async play(type) {\n    this.audioContext = this.audioContext || new (this.w.AudioContext || this.w.webkitAudioContext)();\n    const audio = await this.load(`${this.baseUrl}/${type.audio}`);\n    audio.start();\n  }\n\n  open(type, cardName) {\n    // eslint-disable-next-line no-new\n    new this.w.Notification(cardName, {\n      body: type.text,\n      icon: `${this.baseUrl}/assets/timer.png`\n    });\n  }\n\n  show(type, cardName) {\n    if ((!('Notification' in this.w)) || this.w.Notification.permission === 'denied') { return; }\n\n    if (this.w.Notification.permission === 'granted') {\n      this.open(type, cardName);\n    } else {\n      this.w.Notification.requestPermission((permission) => {\n        if (permission === 'granted') {\n          this.open(type, cardName);\n        }\n      });\n    }\n  }\n}\n\nexport default Notifications;\n","import BoardStorage from './storage/BoardStorage';\nimport CardStorage from './storage/CardStorage';\nimport Notifications from './Notifications';\n\nexport const Statuses = {\n  ONGOING: 'ONGOING',\n  PAUSED: 'PAUSED',\n  ENDED: 'ENDED'\n};\n\nexport const Thumbs = {\n  UP: 'UP',\n  DOWN: 'DOWN',\n  MIDDLE: 'MIDDLE'\n};\n\nclass Discussion {\n  constructor(window, baseUrl, maxDiscussionDuration) {\n    this.w = window;\n    this.baseUrl = baseUrl;\n    this.notifications = new Notifications(this.w, this.baseUrl);\n    this.maxDiscussionDuration = maxDiscussionDuration;\n    this.boardStorage = new BoardStorage();\n    this.cardStorage = new CardStorage();\n  }\n\n  isOngoingOrPausedForAnotherCard = async (t) => {\n    const boardStatus = await this.boardStorage.getDiscussionStatus(t);\n    const cardId = await this.boardStorage.getDiscussionCardId(t);\n\n    return [Statuses.ONGOING, Statuses.PAUSED].includes(boardStatus) && cardId !== t.getContext().card;\n  };\n\n  isOngoingFor = async (t) => {\n    const cardStatus = await this.cardStorage.getDiscussionStatus(t);\n    return Statuses.ONGOING === cardStatus;\n  };\n\n  isPausedFor = async (t) => {\n    const cardStatus = await this.cardStorage.getDiscussionStatus(t);\n    return Statuses.PAUSED === cardStatus;\n  };\n\n  getElapsed = t => this.cardStorage.getDiscussionElapsed(t);\n\n  updateElapsed = async (t) => {\n    const startedAt = await this.boardStorage.getDiscussionStartedAt(t);\n    const elapsed = Date.now() - startedAt;\n\n    if (elapsed > this.maxDiscussionDuration) {\n      clearInterval(await this.boardStorage.getDiscussionIntervalId(t));\n      this.pause(t, true);\n    } else {\n      this.saveElapsed(t);\n    }\n  };\n\n  saveElapsed = async (t) => {\n    const startedAt = await this.boardStorage.getDiscussionStartedAt(t);\n    const previousElapsed = await this.boardStorage.getDiscussionPreviousElapsed(t) || 0;\n    const elapsed = startedAt ? Date.now() - startedAt : 0;\n\n    this.cardStorage.saveDiscussionElapsed(t, (elapsed + previousElapsed));\n  };\n\n  start = async (t) => {\n    this.boardStorage.writeMultiple(t, {\n      [BoardStorage.DISCUSSION_STATUS]: Statuses.ONGOING,\n      [BoardStorage.DISCUSSION_CARD_ID]: t.getContext().card,\n      [BoardStorage.DISCUSSION_STARTED_AT]: Date.now(),\n      [BoardStorage.DISCUSSION_PREVIOUS_ELAPSED]: await this.getElapsed(t),\n      [BoardStorage.DISCUSSION_INTERVAL_ID]: setInterval(this.updateElapsed, 5000, t)\n    });\n\n    await this.cardStorage.saveDiscussionStatus(t, Statuses.ONGOING);\n    await this.cardStorage.deleteDiscussionThumbs(t);\n  };\n\n  pause = async (t, notify = false) => {\n    const intervalId = await this.boardStorage.getDiscussionIntervalId(t);\n    const cardId = await this.boardStorage.getDiscussionCardId(t);\n    const cardName = (await t.cards('id', 'name')).find(card => card.id === cardId).name;\n\n    clearInterval(intervalId);\n\n    this.cardStorage.saveDiscussionStatus(t, Statuses.PAUSED);\n    this.saveElapsed(t);\n    this.boardStorage.writeMultiple(t, {\n      [BoardStorage.DISCUSSION_STATUS]: Statuses.PAUSED,\n      [BoardStorage.DISCUSSION_STARTED_AT]: null,\n      [BoardStorage.DISCUSSION_PREVIOUS_ELAPSED]: await this.getElapsed(t),\n      [BoardStorage.DISCUSSION_INTERVAL_ID]: null\n    });\n\n    if (notify) {\n      this.notifications.play(this.notifications.Types.ELAPSED);\n      this.notifications.show(this.notifications.Types.ELAPSED, cardName);\n    }\n  };\n\n  end = async (t) => {\n    const intervalId = await this.boardStorage.getDiscussionIntervalId(t);\n    clearInterval(intervalId);\n\n    try {\n      await this.cardStorage.saveDiscussionStatus(t, Statuses.ENDED);\n      await this.saveElapsed(t);\n      await this.cardStorage.deleteMultiple(t, [CardStorage.DISCUSSION_THUMBS]);\n      await this.boardStorage.deleteMultiple(t, [\n        BoardStorage.DISCUSSION_STATUS,\n        BoardStorage.DISCUSSION_CARD_ID,\n        BoardStorage.DISCUSSION_STARTED_AT,\n        BoardStorage.DISCUSSION_PREVIOUS_ELAPSED,\n        BoardStorage.DISCUSSION_INTERVAL_ID\n      ]);\n    } catch (err) {\n      throw new Error(err);\n    }\n  };\n}\n\nexport default Discussion;\n"],"sourceRoot":""}